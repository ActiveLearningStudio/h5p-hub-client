@import url(https://fonts.googleapis.com/css?family=Open+Sans);@charset "UTF-8";
/*html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}
*/
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.h5p {
  font-family: 'Open Sans', sans-serif;
  font-size: 0.917em;
  color: #1f2227;
}

.h5p h1, .h5p h2, .h5p h3, .h5p h4, .h5p h5, .h5p h6 {
  font-family: inherit;
  color: inherit;
  font-weight: 300;
  line-height: 1.1;
}

.h5p h1, .h5p h2, .h5p h3 {
  margin-top: 0.833em;
  margin-bottom: 0.4165em;
}

.h5p h4, .h5p h5, .h5p h6 {
  margin-top: 0.4165em;
  margin-bottom: 0.4165em;
  font-weight: 600;
}

.h5p h1 {
  font-size: 1.733em;
}

.h5p h2 {
  font-size: 1.458em;
}

.h5p h3 {
  font-size: 1.250em;
}

.h5p h4 {
  font-size: 1.042em;
}

.h5p h5 {
  font-size: 0.938em;
}

.h5p h6 {
  font-size: 0.875em;
}

.h5p small, .h5p .small {
  color: #71757e;
  font-size: 0.833em;
}

.h5p a {
  color: #1f2227;
  font-weight: 400;
}

.h5p .additional-information {
  font-style: italic;
  color: #71757e;
}

.h5p .button {
  font-size: 0.833em;
  font-weight: 600;
  text-decoration: none;
  padding: 0.708em 1.375em;
  border-radius: 1.375em;
  background-color: #f3f3f3;
  color: #1f2227;
  display: inline-block;
  cursor: pointer;
  border: transparent;
  transition: background-color .35s ease;
}

.h5p .button:focus {
  outline: 0;
  box-shadow: 0.06em 0 0.6em 0.1em #7bc1f9;
}

.h5p .button.button-primary {
  background-color: #0a78d1;
  color: white;
}

.h5p .button.button-primary:hover {
  background-color: #1a93f4;
}

.h5p .button.button-primary:active {
  background-color: #085ca0;
}

.h5p .button.button-primary[disabled] {
  background-color: #acd8fb;
}

.h5p .button.button-inverse-primary {
  background-color: white;
  color: #0a78d1;
  border: 0.125em solid #0a78d1;
}

.h5p .button.button-inverse-primary:hover {
  color: #1a93f4;
  border-color: #1a93f4;
}

.h5p .button.button-inverse-primary:active {
  color: #085ca0;
  border-color: #085ca0;
}

.h5p .button.button-inverse-primary[disabled] {
  color: #acd8fb;
  border-color: #acd8fb;
}

.h5p .img-responsive {
  max-width: 100%;
}

.h5p {
  /* Form control */
  /* Input Group */
}

.h5p .form-control {
  display: block;
  width: 100%;
  padding: 0.833em;
  font-size: 0.917em;
  border: 0.125em solid #ced6e3;
  box-sizing: border-box;
}

.h5p .form-control::-webkit-input-placeholder {
  color: #ced6e3;
}

.h5p .form-control:-moz-placeholder {
  color: #ced6e3;
}

.h5p .form-control::-moz-placeholder {
  color: #ced6e3;
}

.h5p .form-control:-ms-input-placeholder {
  color: #ced6e3;
}

.h5p .form-control.form-control-rounded {
  border-radius: 2em;
}

.h5p .form-control:focus {
  outline: 0;
  box-shadow: 0.06em 0 0.6em 0.1em #7bc1f9;
}

.h5p .input-group {
  position: relative;
}

.h5p .input-group .input-group-addon {
  position: absolute;
  top: 0.5em;
  right: 1em;
}

.h5p .panel {
  border: 0.042em solid #ced6e3;
}

.h5p .panel .panel-header {
  background-color: #f3f3f3;
  color: #1f2227;
  padding: 0.833em;
}

.h5p .panel .panel-header[aria-expanded] {
  cursor: pointer;
}

.h5p .panel .panel-body {
  overflow: hidden;
}

.h5p .panel .panel-body[aria-hidden="true"] {
  display: none;
}

.h5p .panel .panel-body .panel-body-inner {
  border-top: 0.042em solid #ced6e3;
  padding: 0.833em;
}

.h5p .panel-group .panel:not(:first-child) {
  margin-top: -1px;
}

.h5p .tab-panel {
  border: 0.042em solid #ced6e3;
}

.h5p .tab-panel [role="tablist"] {
  background-color: #f3f3f3;
  list-style: none;
  padding: 0;
  margin: 0;
  border-bottom: 0.042em solid #ced6e3;
}

.h5p .tab-panel [role="tab"] {
  display: inline-block;
  padding: 0.833em;
  text-decoration: none;
  color: #1f2227;
  cursor: pointer;
}

.h5p .tab-panel [role="tab"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #0a78d1;
  -moz-box-shadow: inset 0 -5px 0 0 #0a78d1;
  box-shadow: inset 0 -5px 0 0 #0a78d1;
}

.h5p .tab-panel [role="tabpanel"] .tab-panel-inner {
  padding: 0.833em;
}

.h5p .tab-panel [role="tabpanel"][aria-hidden="true"] {
  display: none;
}

.h5p .h5p-menu {
  border: 0.042em solid #ced6e3;
  background-color: #f3f3f3;
  list-style: none;
  color: #1f2227;
  padding: 0;
  margin: 0 0 0.833em 0;
}

.h5p .h5p-menu [role="menuitem"] {
  display: inline-block;
  padding: 0.833em;
  text-decoration: none;
  cursor: pointer;
}

.h5p .h5p-menu [role="menuitem"][aria-selected="true"] {
  box-shadow: inset 0 -5px #0a78d1;
}

.message {
  margin: 0.833em 0;
  padding: 1.250em;
  text-align: right;
}

.message h3 {
  font-size: 1.042em;
  color: #1f2227;
}

.message p {
  font-size: 0.833em;
  color: #71757e;
}

.message .close {
  display: none;
}

.info {
  -webkit-box-shadow: 0.167em 0 0 0 #00aa54 true;
  -moz-box-shadow: 0.167em 0 0 0 #00aa54 true;
  box-shadow: 0.167em 0 0 0 #00aa54 true;
  background: rgba(0, 170, 84, 0.15);
  box-shadow: inset 0.167em 0 #00aa54;
}

.info .button {
  color: #00aa54;
  border: solid 1px;
  background-color: transparent;
}

.success {
  -webkit-box-shadow: 0.167em 0 0 0 #ffcc33 true;
  -moz-box-shadow: 0.167em 0 0 0 #ffcc33 true;
  box-shadow: 0.167em 0 0 0 #ffcc33 true;
  background: rgba(255, 204, 51, 0.15);
  box-shadow: inset 0.167em 0 #ffcc33;
}

.success .button {
  color: #1f2227;
  border: solid 1px;
  background-color: transparent;
}

.error {
  -webkit-box-shadow: 0.167em 0 0 0 #c64750 true;
  -moz-box-shadow: 0.167em 0 0 0 #c64750 true;
  box-shadow: 0.167em 0 0 0 #c64750 true;
  background: rgba(198, 71, 80, 0.15);
  box-shadow: inset 0.167em 0 #c64750;
}

.error .button {
  color: #c64750;
  border: solid 1px;
  background-color: transparent;
}

.dismissible {
  overflow: auto;
}

.dismissible .message-content {
  float: right;
}

.dismissible .close {
  display: block;
  float: right;
  padding-top: 1.250em;
  padding-left: 1.250em;
}

/* Section colors */
/* Section colors */
.h5p.h5p-hub {
  font-family: 'Open Sans', sans-serif;
}

.h5p.h5p-hub .panel {
  border: 1px solid #697585;
}

.h5p.h5p-hub .panel > .panel-header {
  background-color: white;
  color: #697585;
  font-style: italic;
  font-weight: 600;
}

.h5p.h5p-hub .panel > .panel-header:before {
  font-style: normal;
  margin-right: 1em;
}

.h5p.h5p-hub .panel > .panel-header:after {
  font-family: 'h5p' !important;
  content: "\E924";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 1.3em;
  float: right;
}

.h5p.h5p-hub .panel.h5p-section-create-content[open] {
  border: 1px solid #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-create-content [role="menuitem"][aria-selected="true"],
.h5p.h5p-hub .panel.h5p-section-create-content [role="tab"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #0a78d1;
  -moz-box-shadow: inset 0 -5px 0 0 #0a78d1;
  box-shadow: inset 0 -5px 0 0 #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-create-content .button.button-primary {
  background-color: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-create-content .button.button-inverse-primary {
  border-color: #0a78d1;
  color: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-create-content .icon-search {
  color: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-upload[open] {
  border: 1px solid #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-upload [role="menuitem"][aria-selected="true"],
.h5p.h5p-hub .panel.h5p-section-upload [role="tab"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #db6f28;
  -moz-box-shadow: inset 0 -5px 0 0 #db6f28;
  box-shadow: inset 0 -5px 0 0 #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-upload .button.button-primary {
  background-color: #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-upload .button.button-inverse-primary {
  border-color: #db6f28;
  color: #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-upload .icon-search {
  color: #db6f28;
}

.h5p.h5p-hub .tab-panel {
  border: none;
}

.h5p.h5p-hub .tab-panel [aria-hidden='true'] {
  display: none;
}

.h5p.h5p-hub .tab-panel > nav > [role="tablist"] {
  background-color: #474f5a;
  border-bottom: none;
}

.h5p.h5p-hub .tab-panel > nav > [role="tablist"] [role="tab"] {
  color: #f3f3f3;
}

/* Section colors */
.h5p-hub .menu-group {
  background-color: #697585;
  padding-top: 1.125em;
  padding-bottom: 2.250em;
  padding-left: 2.250em;
  padding-right: 2.250em;
}

.h5p-hub .menu-group .menu {
  overflow: auto;
  border: 0;
  border-bottom: solid 1px #9CA5B4;
  margin-left: 2.25em;
  margin-right: 2.25em;
}

.h5p-hub .menu-group .menu nav {
  float: right;
}

.h5p-hub .menu-group .menu ul {
  background-color: transparent;
  border: none;
}

.h5p-hub .menu-group .menu ul li {
  color: #f3f3f3;
}

.h5p-hub .menu-group .menu .menu-title {
  float: left;
  text-align: center;
  color: white;
  font-style: italic;
}

.h5p-hub .menu-group .input-group {
  padding: 0.4em;
  margin-top: 1.125em;
  background-color: white;
  border-radius: 2em;
}

.h5p-hub .menu-group .input-group input {
  font-style: italic;
}

.h5p-hub .menu-group .icon-search {
  font-size: 2.5em;
  top: 0.2em;
  right: 0.25em;
}

.h5p-hub [aria-hidden="true"] {
  display: none;
}

.h5p-hub .content-type-detail {
  padding: 0.833em;
}

.h5p-hub .content-type-detail .container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.h5p-hub .content-type-detail .container:after {
  content: " ";
  display: block;
  clear: both;
}

.h5p-hub .content-type-detail .image-wrapper {
  width: 32.20339%;
  float: left;
  margin-right: 1.69492%;
}

.h5p-hub .content-type-detail .text-details {
  width: 66.10169%;
  float: right;
  margin-right: 0;
}

.h5p-hub .content-type-detail .button-bar {
  overflow: auto;
  margin-bottom: 0.833em;
}

.h5p-hub .content-type-detail .button-bar .button {
  float: right;
}

.h5p-hub .content-type-detail .back-button {
  font-size: 2em;
  color: #1f2227;
}

.h5p-hub .content-type-detail .back-button:hover {
  color: #4c5460;
}

/* Section colors */
.h5p-hub ul.content-type-list {
  list-style: none;
  padding: 1.25em 0;
  margin: 0;
  height: 500px;
  overflow: auto;
}

.h5p-hub ul.content-type-list[aria-hidden="true"] {
  display: none;
}

.h5p-hub ul.content-type-list li {
  width: 100%;
  padding: 0.833em;
  box-sizing: border-box;
  cursor: pointer;
}

.h5p-hub ul.content-type-list li:hover {
  background-color: #f5faff;
}

.h5p-hub ul.content-type-list li:not(:last-child) {
  border-bottom: 1px solid #f5f5f5;
}

.h5p-hub ul.content-type-list img {
  max-width: 100px;
  float: left;
  margin-right: 0.833em;
}

.h5p-hub ul.content-type-list h4 {
  line-height: 2em;
  margin: 0;
}

.h5p-hub ul.content-type-list .description {
  color: #747474;
}

.h5p-hub ul.content-type-list .button {
  float: right;
  margin-left: 0.833em;
  margin-top: 0.7em;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjazovLy9zcmMvc3R5bGVzL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19yZXNldC5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vaDVwLXNkay9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX3R5cG9ncmFwaHkuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL192YXJpYWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL19jb2xvcnMuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL19taXhpbnMuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19pbWFnZXMuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19pbnB1dC1maWVsZC5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vaDVwLXNkay9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX3BhbmVsLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vfi9oNXAtc2RrL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fdGFiLXBhbmVsLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vfi9oNXAtc2RrL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fbWVudS5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vaDVwLXNkay9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX21lc3NhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9zcmMvc3R5bGVzL2Jhc2UvX2NvbG9ycy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL3NyYy9zdHlsZXMvY29tcG9uZW50cy9faHViLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vc3JjL3N0eWxlcy9jb21wb25lbnRzL19jb250ZW50LXR5cGUtc2VjdGlvbi5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fY29udGVudC10eXBlLWRldGFpbC5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX3JlbS5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fY29udGFpbmVyLnNjc3MiLCJ3ZWJwYWNrOi8vL3dlYnBhY2s6Ly8vfi9zdXN5L3Nhc3Mvc3VzeS9vdXRwdXQvc3VwcG9ydC9fY2xlYXJmaXguc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX3NwYW4uc2NzcyIsIndlYnBhY2s6Ly8vd2VicGFjazovLy9+L3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zaGFyZWQvX2RpcmVjdGlvbi5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL34vc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fZ3V0dGVycy5zY3NzIiwid2VicGFjazovLy93ZWJwYWNrOi8vL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fY29udGVudC10eXBlLWxpc3Quc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiK0RBQUEsaUJBQWlCO0FDQWpCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7RUFrQkU7QUFFRjs7RUFFRSxlQUFjO0NBQ2Y7O0FBRUQ7RUFDRSxpQkFBZ0I7Q0FDakI7O0FBRUQ7RUFDRSxhQUFZO0NBQ2I7O0FBQ0Q7O0VBRUUsWUFBVztFQUNYLGNBQWE7Q0FDZDs7QUFFRDtF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LGFBQVk7RUFDWixxQnBCeENVO0VvQnlDVixrQkFBaUI7Q0FDbEIiLCJmaWxlIjoiaDVwLWh1Yi1jbGllbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLypodG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbiovXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnNcIik7XG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbm9sLCB1bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGUsIHEge1xuICBxdW90ZXM6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuLmg1cCB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjkxN2VtO1xuICBjb2xvcjogIzFmMjIyNztcbn1cblxuLmg1cCBoMSwgLmg1cCBoMiwgLmg1cCBoMywgLmg1cCBoNCwgLmg1cCBoNSwgLmg1cCBoNiB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbGluZS1oZWlnaHQ6IDEuMTtcbn1cblxuLmg1cCBoMSwgLmg1cCBoMiwgLmg1cCBoMyB7XG4gIG1hcmdpbi10b3A6IDAuODMzZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNDE2NWVtO1xufVxuXG4uaDVwIGg0LCAuaDVwIGg1LCAuaDVwIGg2IHtcbiAgbWFyZ2luLXRvcDogMC40MTY1ZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNDE2NWVtO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuXG4uaDVwIGgxIHtcbiAgZm9udC1zaXplOiAxLjczM2VtO1xufVxuXG4uaDVwIGgyIHtcbiAgZm9udC1zaXplOiAxLjQ1OGVtO1xufVxuXG4uaDVwIGgzIHtcbiAgZm9udC1zaXplOiAxLjI1MGVtO1xufVxuXG4uaDVwIGg0IHtcbiAgZm9udC1zaXplOiAxLjA0MmVtO1xufVxuXG4uaDVwIGg1IHtcbiAgZm9udC1zaXplOiAwLjkzOGVtO1xufVxuXG4uaDVwIGg2IHtcbiAgZm9udC1zaXplOiAwLjg3NWVtO1xufVxuXG4uaDVwIHNtYWxsLCAuaDVwIC5zbWFsbCB7XG4gIGNvbG9yOiAjNzE3NTdlO1xuICBmb250LXNpemU6IDAuODMzZW07XG59XG5cbi5oNXAgYSB7XG4gIGNvbG9yOiAjMWYyMjI3O1xuICBmb250LXdlaWdodDogNDAwO1xufVxuXG4uaDVwIC5hZGRpdGlvbmFsLWluZm9ybWF0aW9uIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBjb2xvcjogIzcxNzU3ZTtcbn1cblxuLmg1cCAuYnV0dG9uIHtcbiAgZm9udC1zaXplOiAwLjgzM2VtO1xuICBmb250LXdlaWdodDogNjAwO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIHBhZGRpbmc6IDAuNzA4ZW0gMS4zNzVlbTtcbiAgYm9yZGVyLXJhZGl1czogMS4zNzVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMztcbiAgY29sb3I6ICMxZjIyMjc7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IHRyYW5zcGFyZW50O1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIC4zNXMgZWFzZTtcbn1cblxuLmg1cCAuYnV0dG9uOmZvY3VzIHtcbiAgb3V0bGluZTogMDtcbiAgYm94LXNoYWRvdzogMC4wNmVtIDAgMC42ZW0gMC4xZW0gIzdiYzFmOTtcbn1cblxuLmg1cCAuYnV0dG9uLmJ1dHRvbi1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBhNzhkMTtcbiAgY29sb3I6IHdoaXRlO1xufVxuXG4uaDVwIC5idXR0b24uYnV0dG9uLXByaW1hcnk6aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWE5M2Y0O1xufVxuXG4uaDVwIC5idXR0b24uYnV0dG9uLXByaW1hcnk6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzA4NWNhMDtcbn1cblxuLmg1cCAuYnV0dG9uLmJ1dHRvbi1wcmltYXJ5W2Rpc2FibGVkXSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhY2Q4ZmI7XG59XG5cbi5oNXAgLmJ1dHRvbi5idXR0b24taW52ZXJzZS1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiAjMGE3OGQxO1xuICBib3JkZXI6IDAuMTI1ZW0gc29saWQgIzBhNzhkMTtcbn1cblxuLmg1cCAuYnV0dG9uLmJ1dHRvbi1pbnZlcnNlLXByaW1hcnk6aG92ZXIge1xuICBjb2xvcjogIzFhOTNmNDtcbiAgYm9yZGVyLWNvbG9yOiAjMWE5M2Y0O1xufVxuXG4uaDVwIC5idXR0b24uYnV0dG9uLWludmVyc2UtcHJpbWFyeTphY3RpdmUge1xuICBjb2xvcjogIzA4NWNhMDtcbiAgYm9yZGVyLWNvbG9yOiAjMDg1Y2EwO1xufVxuXG4uaDVwIC5idXR0b24uYnV0dG9uLWludmVyc2UtcHJpbWFyeVtkaXNhYmxlZF0ge1xuICBjb2xvcjogI2FjZDhmYjtcbiAgYm9yZGVyLWNvbG9yOiAjYWNkOGZiO1xufVxuXG4uaDVwIC5pbWctcmVzcG9uc2l2ZSB7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuLmg1cCB7XG4gIC8qIEZvcm0gY29udHJvbCAqL1xuICAvKiBJbnB1dCBHcm91cCAqL1xufVxuXG4uaDVwIC5mb3JtLWNvbnRyb2wge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAuODMzZW07XG4gIGZvbnQtc2l6ZTogMC45MTdlbTtcbiAgYm9yZGVyOiAwLjEyNWVtIHNvbGlkICNjZWQ2ZTM7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5oNXAgLmZvcm0tY29udHJvbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjY2VkNmUzO1xufVxuXG4uaDVwIC5mb3JtLWNvbnRyb2w6LW1vei1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjY2VkNmUzO1xufVxuXG4uaDVwIC5mb3JtLWNvbnRyb2w6Oi1tb3otcGxhY2Vob2xkZXIge1xuICBjb2xvcjogI2NlZDZlMztcbn1cblxuLmg1cCAuZm9ybS1jb250cm9sOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gIGNvbG9yOiAjY2VkNmUzO1xufVxuXG4uaDVwIC5mb3JtLWNvbnRyb2wuZm9ybS1jb250cm9sLXJvdW5kZWQge1xuICBib3JkZXItcmFkaXVzOiAyZW07XG59XG5cbi5oNXAgLmZvcm0tY29udHJvbDpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG4gIGJveC1zaGFkb3c6IDAuMDZlbSAwIDAuNmVtIDAuMWVtICM3YmMxZjk7XG59XG5cbi5oNXAgLmlucHV0LWdyb3VwIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uaDVwIC5pbnB1dC1ncm91cCAuaW5wdXQtZ3JvdXAtYWRkb24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMC41ZW07XG4gIHJpZ2h0OiAxZW07XG59XG5cbi5oNXAgLnBhbmVsIHtcbiAgYm9yZGVyOiAwLjA0MmVtIHNvbGlkICNjZWQ2ZTM7XG59XG5cbi5oNXAgLnBhbmVsIC5wYW5lbC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xuICBjb2xvcjogIzFmMjIyNztcbiAgcGFkZGluZzogMC44MzNlbTtcbn1cblxuLmg1cCAucGFuZWwgLnBhbmVsLWhlYWRlclthcmlhLWV4cGFuZGVkXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLmg1cCAucGFuZWwgLnBhbmVsLWJvZHkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG4uaDVwIC5wYW5lbCAucGFuZWwtYm9keVthcmlhLWhpZGRlbj1cInRydWVcIl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaDVwIC5wYW5lbCAucGFuZWwtYm9keSAucGFuZWwtYm9keS1pbm5lciB7XG4gIGJvcmRlci10b3A6IDAuMDQyZW0gc29saWQgI2NlZDZlMztcbiAgcGFkZGluZzogMC44MzNlbTtcbn1cblxuLmg1cCAucGFuZWwtZ3JvdXAgLnBhbmVsOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgbWFyZ2luLXRvcDogLTFweDtcbn1cblxuLmg1cCAudGFiLXBhbmVsIHtcbiAgYm9yZGVyOiAwLjA0MmVtIHNvbGlkICNjZWQ2ZTM7XG59XG5cbi5oNXAgLnRhYi1wYW5lbCBbcm9sZT1cInRhYmxpc3RcIl0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlci1ib3R0b206IDAuMDQyZW0gc29saWQgI2NlZDZlMztcbn1cblxuLmg1cCAudGFiLXBhbmVsIFtyb2xlPVwidGFiXCJdIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAwLjgzM2VtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMWYyMjI3O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5oNXAgLnRhYi1wYW5lbCBbcm9sZT1cInRhYlwiXVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAtNXB4IDAsIDAgIzBhNzhkMTtcbiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIC01cHggMCAwICMwYTc4ZDE7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgLTVweCAwIDAgIzBhNzhkMTtcbn1cblxuLmg1cCAudGFiLXBhbmVsIFtyb2xlPVwidGFicGFuZWxcIl0gLnRhYi1wYW5lbC1pbm5lciB7XG4gIHBhZGRpbmc6IDAuODMzZW07XG59XG5cbi5oNXAgLnRhYi1wYW5lbCBbcm9sZT1cInRhYnBhbmVsXCJdW2FyaWEtaGlkZGVuPVwidHJ1ZVwiXSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oNXAgLmg1cC1tZW51IHtcbiAgYm9yZGVyOiAwLjA0MmVtIHNvbGlkICNjZWQ2ZTM7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIGNvbG9yOiAjMWYyMjI3O1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDAgMCAwLjgzM2VtIDA7XG59XG5cbi5oNXAgLmg1cC1tZW51IFtyb2xlPVwibWVudWl0ZW1cIl0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDAuODMzZW07XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uaDVwIC5oNXAtbWVudSBbcm9sZT1cIm1lbnVpdGVtXCJdW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAtNXB4ICMwYTc4ZDE7XG59XG5cbi5tZXNzYWdlIHtcbiAgbWFyZ2luOiAwLjgzM2VtIDA7XG4gIHBhZGRpbmc6IDEuMjUwZW07XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ubWVzc2FnZSBoMyB7XG4gIGZvbnQtc2l6ZTogMS4wNDJlbTtcbiAgY29sb3I6ICMxZjIyMjc7XG59XG5cbi5tZXNzYWdlIHAge1xuICBmb250LXNpemU6IDAuODMzZW07XG4gIGNvbG9yOiAjNzE3NTdlO1xufVxuXG4ubWVzc2FnZSAuY2xvc2Uge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaW5mbyB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogMC4xNjdlbSAwIDAgMCAjMDBhYTU0IHRydWU7XG4gIC1tb3otYm94LXNoYWRvdzogMC4xNjdlbSAwIDAgMCAjMDBhYTU0IHRydWU7XG4gIGJveC1zaGFkb3c6IDAuMTY3ZW0gMCAwIDAgIzAwYWE1NCB0cnVlO1xuICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDE3MCwgODQsIDAuMTUpO1xuICBib3gtc2hhZG93OiBpbnNldCAwLjE2N2VtIDAgIzAwYWE1NDtcbn1cblxuLmluZm8gLmJ1dHRvbiB7XG4gIGNvbG9yOiAjMDBhYTU0O1xuICBib3JkZXI6IHNvbGlkIDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5zdWNjZXNzIHtcbiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwLjE2N2VtIDAgMCAwICNmZmNjMzMgdHJ1ZTtcbiAgLW1vei1ib3gtc2hhZG93OiAwLjE2N2VtIDAgMCAwICNmZmNjMzMgdHJ1ZTtcbiAgYm94LXNoYWRvdzogMC4xNjdlbSAwIDAgMCAjZmZjYzMzIHRydWU7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyMDQsIDUxLCAwLjE1KTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMC4xNjdlbSAwICNmZmNjMzM7XG59XG5cbi5zdWNjZXNzIC5idXR0b24ge1xuICBjb2xvcjogIzFmMjIyNztcbiAgYm9yZGVyOiBzb2xpZCAxcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4uZXJyb3Ige1xuICAtd2Via2l0LWJveC1zaGFkb3c6IDAuMTY3ZW0gMCAwIDAgI2M2NDc1MCB0cnVlO1xuICAtbW96LWJveC1zaGFkb3c6IDAuMTY3ZW0gMCAwIDAgI2M2NDc1MCB0cnVlO1xuICBib3gtc2hhZG93OiAwLjE2N2VtIDAgMCAwICNjNjQ3NTAgdHJ1ZTtcbiAgYmFja2dyb3VuZDogcmdiYSgxOTgsIDcxLCA4MCwgMC4xNSk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAuMTY3ZW0gMCAjYzY0NzUwO1xufVxuXG4uZXJyb3IgLmJ1dHRvbiB7XG4gIGNvbG9yOiAjYzY0NzUwO1xuICBib3JkZXI6IHNvbGlkIDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5kaXNtaXNzaWJsZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZGlzbWlzc2libGUgLm1lc3NhZ2UtY29udGVudCB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuLmRpc21pc3NpYmxlIC5jbG9zZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmbG9hdDogcmlnaHQ7XG4gIHBhZGRpbmctdG9wOiAxLjI1MGVtO1xuICBwYWRkaW5nLWxlZnQ6IDEuMjUwZW07XG59XG5cbi8qIFNlY3Rpb24gY29sb3JzICovXG4vKiBTZWN0aW9uIGNvbG9ycyAqL1xuLmg1cC5oNXAtaHViIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xufVxuXG4uaDVwLmg1cC1odWIgLnBhbmVsIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzY5NzU4NTtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbCA+IC5wYW5lbC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgY29sb3I6ICM2OTc1ODU7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbCA+IC5wYW5lbC1oZWFkZXI6YmVmb3JlIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBtYXJnaW4tcmlnaHQ6IDFlbTtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbCA+IC5wYW5lbC1oZWFkZXI6YWZ0ZXIge1xuICBmb250LWZhbWlseTogJ2g1cCcgIWltcG9ydGFudDtcbiAgY29udGVudDogXCLupKRcIjtcbiAgc3BlYWs6IG5vbmU7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC12YXJpYW50OiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uaDVwLmg1cC1odWIgLnBhbmVsLmg1cC1zZWN0aW9uLWNyZWF0ZS1jb250ZW50W29wZW5dIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzBhNzhkMTtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbC5oNXAtc2VjdGlvbi1jcmVhdGUtY29udGVudCBbcm9sZT1cIm1lbnVpdGVtXCJdW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdLFxuLmg1cC5oNXAtaHViIC5wYW5lbC5oNXAtc2VjdGlvbi1jcmVhdGUtY29udGVudCBbcm9sZT1cInRhYlwiXVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAtNXB4IDAsIDAgIzBhNzhkMTtcbiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIC01cHggMCAwICMwYTc4ZDE7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgLTVweCAwIDAgIzBhNzhkMTtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbC5oNXAtc2VjdGlvbi1jcmVhdGUtY29udGVudCAuYnV0dG9uLmJ1dHRvbi1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzBhNzhkMTtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbC5oNXAtc2VjdGlvbi1jcmVhdGUtY29udGVudCAuYnV0dG9uLmJ1dHRvbi1pbnZlcnNlLXByaW1hcnkge1xuICBib3JkZXItY29sb3I6ICMwYTc4ZDE7XG4gIGNvbG9yOiAjMGE3OGQxO1xufVxuXG4uaDVwLmg1cC1odWIgLnBhbmVsLmg1cC1zZWN0aW9uLWNyZWF0ZS1jb250ZW50IC5pY29uLXNlYXJjaCB7XG4gIGNvbG9yOiAjMGE3OGQxO1xufVxuXG4uaDVwLmg1cC1odWIgLnBhbmVsLmg1cC1zZWN0aW9uLXVwbG9hZFtvcGVuXSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNkYjZmMjg7XG59XG5cbi5oNXAuaDVwLWh1YiAucGFuZWwuaDVwLXNlY3Rpb24tdXBsb2FkIFtyb2xlPVwibWVudWl0ZW1cIl1bYXJpYS1zZWxlY3RlZD1cInRydWVcIl0sXG4uaDVwLmg1cC1odWIgLnBhbmVsLmg1cC1zZWN0aW9uLXVwbG9hZCBbcm9sZT1cInRhYlwiXVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSB7XG4gIC13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMCAtNXB4IDAsIDAgI2RiNmYyODtcbiAgLW1vei1ib3gtc2hhZG93OiBpbnNldCAwIC01cHggMCAwICNkYjZmMjg7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgLTVweCAwIDAgI2RiNmYyODtcbn1cblxuLmg1cC5oNXAtaHViIC5wYW5lbC5oNXAtc2VjdGlvbi11cGxvYWQgLmJ1dHRvbi5idXR0b24tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkYjZmMjg7XG59XG5cbi5oNXAuaDVwLWh1YiAucGFuZWwuaDVwLXNlY3Rpb24tdXBsb2FkIC5idXR0b24uYnV0dG9uLWludmVyc2UtcHJpbWFyeSB7XG4gIGJvcmRlci1jb2xvcjogI2RiNmYyODtcbiAgY29sb3I6ICNkYjZmMjg7XG59XG5cbi5oNXAuaDVwLWh1YiAucGFuZWwuaDVwLXNlY3Rpb24tdXBsb2FkIC5pY29uLXNlYXJjaCB7XG4gIGNvbG9yOiAjZGI2ZjI4O1xufVxuXG4uaDVwLmg1cC1odWIgLnRhYi1wYW5lbCB7XG4gIGJvcmRlcjogbm9uZTtcbn1cblxuLmg1cC5oNXAtaHViIC50YWItcGFuZWwgW2FyaWEtaGlkZGVuPSd0cnVlJ10ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaDVwLmg1cC1odWIgLnRhYi1wYW5lbCA+IG5hdiA+IFtyb2xlPVwidGFibGlzdFwiXSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NzRmNWE7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG59XG5cbi5oNXAuaDVwLWh1YiAudGFiLXBhbmVsID4gbmF2ID4gW3JvbGU9XCJ0YWJsaXN0XCJdIFtyb2xlPVwidGFiXCJdIHtcbiAgY29sb3I6ICNmM2YzZjM7XG59XG5cbi8qIFNlY3Rpb24gY29sb3JzICovXG4uaDVwLWh1YiAubWVudS1ncm91cCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM2OTc1ODU7XG4gIHBhZGRpbmctdG9wOiAxLjEyNWVtO1xuICBwYWRkaW5nLWJvdHRvbTogMi4yNTBlbTtcbiAgcGFkZGluZy1sZWZ0OiAyLjI1MGVtO1xuICBwYWRkaW5nLXJpZ2h0OiAyLjI1MGVtO1xufVxuXG4uaDVwLWh1YiAubWVudS1ncm91cCAubWVudSB7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIDFweCAjOUNBNUI0O1xuICBtYXJnaW4tbGVmdDogMi4yNWVtO1xuICBtYXJnaW4tcmlnaHQ6IDIuMjVlbTtcbn1cblxuLmg1cC1odWIgLm1lbnUtZ3JvdXAgLm1lbnUgbmF2IHtcbiAgZmxvYXQ6IHJpZ2h0O1xufVxuXG4uaDVwLWh1YiAubWVudS1ncm91cCAubWVudSB1bCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi5oNXAtaHViIC5tZW51LWdyb3VwIC5tZW51IHVsIGxpIHtcbiAgY29sb3I6ICNmM2YzZjM7XG59XG5cbi5oNXAtaHViIC5tZW51LWdyb3VwIC5tZW51IC5tZW51LXRpdGxlIHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IHdoaXRlO1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5oNXAtaHViIC5tZW51LWdyb3VwIC5pbnB1dC1ncm91cCB7XG4gIHBhZGRpbmc6IDAuNGVtO1xuICBtYXJnaW4tdG9wOiAxLjEyNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMmVtO1xufVxuXG4uaDVwLWh1YiAubWVudS1ncm91cCAuaW5wdXQtZ3JvdXAgaW5wdXQge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbi5oNXAtaHViIC5tZW51LWdyb3VwIC5pY29uLXNlYXJjaCB7XG4gIGZvbnQtc2l6ZTogMi41ZW07XG4gIHRvcDogMC4yZW07XG4gIHJpZ2h0OiAwLjI1ZW07XG59XG5cbi5oNXAtaHViIFthcmlhLWhpZGRlbj1cInRydWVcIl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaDVwLWh1YiAuY29udGVudC10eXBlLWRldGFpbCB7XG4gIHBhZGRpbmc6IDAuODMzZW07XG59XG5cbi5oNXAtaHViIC5jb250ZW50LXR5cGUtZGV0YWlsIC5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi5oNXAtaHViIC5jb250ZW50LXR5cGUtZGV0YWlsIC5jb250YWluZXI6YWZ0ZXIge1xuICBjb250ZW50OiBcIiBcIjtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGNsZWFyOiBib3RoO1xufVxuXG4uaDVwLWh1YiAuY29udGVudC10eXBlLWRldGFpbCAuaW1hZ2Utd3JhcHBlciB7XG4gIHdpZHRoOiAzMi4yMDMzOSU7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tcmlnaHQ6IDEuNjk0OTIlO1xufVxuXG4uaDVwLWh1YiAuY29udGVudC10eXBlLWRldGFpbCAudGV4dC1kZXRhaWxzIHtcbiAgd2lkdGg6IDY2LjEwMTY5JTtcbiAgZmxvYXQ6IHJpZ2h0O1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59XG5cbi5oNXAtaHViIC5jb250ZW50LXR5cGUtZGV0YWlsIC5idXR0b24tYmFyIHtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDAuODMzZW07XG59XG5cbi5oNXAtaHViIC5jb250ZW50LXR5cGUtZGV0YWlsIC5idXR0b24tYmFyIC5idXR0b24ge1xuICBmbG9hdDogcmlnaHQ7XG59XG5cbi5oNXAtaHViIC5jb250ZW50LXR5cGUtZGV0YWlsIC5iYWNrLWJ1dHRvbiB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBjb2xvcjogIzFmMjIyNztcbn1cblxuLmg1cC1odWIgLmNvbnRlbnQtdHlwZS1kZXRhaWwgLmJhY2stYnV0dG9uOmhvdmVyIHtcbiAgY29sb3I6ICM0YzU0NjA7XG59XG5cbi8qIFNlY3Rpb24gY29sb3JzICovXG4uaDVwLWh1YiB1bC5jb250ZW50LXR5cGUtbGlzdCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDEuMjVlbSAwO1xuICBtYXJnaW46IDA7XG4gIGhlaWdodDogNTAwcHg7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uaDVwLWh1YiB1bC5jb250ZW50LXR5cGUtbGlzdFthcmlhLWhpZGRlbj1cInRydWVcIl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaDVwLWh1YiB1bC5jb250ZW50LXR5cGUtbGlzdCBsaSB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwLjgzM2VtO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5oNXAtaHViIHVsLmNvbnRlbnQtdHlwZS1saXN0IGxpOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZmFmZjtcbn1cblxuLmg1cC1odWIgdWwuY29udGVudC10eXBlLWxpc3QgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZjVmNWY1O1xufVxuXG4uaDVwLWh1YiB1bC5jb250ZW50LXR5cGUtbGlzdCBpbWcge1xuICBtYXgtd2lkdGg6IDEwMHB4O1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAwLjgzM2VtO1xufVxuXG4uaDVwLWh1YiB1bC5jb250ZW50LXR5cGUtbGlzdCBoNCB7XG4gIGxpbmUtaGVpZ2h0OiAyZW07XG4gIG1hcmdpbjogMDtcbn1cblxuLmg1cC1odWIgdWwuY29udGVudC10eXBlLWxpc3QgLmRlc2NyaXB0aW9uIHtcbiAgY29sb3I6ICM3NDc0NzQ7XG59XG5cbi5oNXAtaHViIHVsLmNvbnRlbnQtdHlwZS1saXN0IC5idXR0b24ge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbi1sZWZ0OiAwLjgzM2VtO1xuICBtYXJnaW4tdG9wOiAwLjdlbTtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL3NyYy9zdHlsZXMvbWFpbi5zY3NzIiwiLypodG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBwLCBibG9ja3F1b3RlLCBwcmUsXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXG5zbWFsbCwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VwLCB0dCwgdmFyLFxuYiwgdSwgaSwgY2VudGVyLFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcbmZpZWxkc2V0LCBmb3JtLCBsYWJlbCwgbGVnZW5kLFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCxcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cbiovXG5cbmFydGljbGUsIGFzaWRlLCBkZXRhaWxzLCBmaWdjYXB0aW9uLCBmaWd1cmUsXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxub2wsIHVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbn1cblxuYmxvY2txdW90ZSwgcSB7XG4gIHF1b3Rlczogbm9uZTtcbn1cbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxucTpiZWZvcmUsIHE6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgY29udGVudDogbm9uZTtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19yZXNldC5zY3NzIiwiQGltcG9ydCBcIi4uL2Jhc2UvY29sb3JzXCI7XG5AaW1wb3J0IFwiLi4vYmFzZS92YXJpYWJsZXNcIjtcblxuLmg1cCB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAkdGV4dC1ib2R5LWxhcmdlO1xuICBjb2xvcjogJHRleHQtZGFyaztcblxuICBoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICBjb2xvcjogaW5oZXJpdDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIH1cblxuICBoMSwgaDIsIGgzIHtcbiAgICBtYXJnaW4tdG9wOiAkZ3V0dGVyO1xuICAgIG1hcmdpbi1ib3R0b206ICRndXR0ZXIgLyAyO1xuICB9XG5cbiAgaDQsIGg1LCBoNiB7XG4gICAgbWFyZ2luLXRvcDogJGd1dHRlciAvIDI7XG4gICAgbWFyZ2luLWJvdHRvbTogJGd1dHRlciAvIDI7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgfVxuXG4gIGgxIHtcbiAgICBmb250LXNpemU6IDEuNzMzZW07XG4gIH1cblxuICBoMiB7XG4gICAgZm9udC1zaXplOiAxLjQ1OGVtO1xuICB9XG5cbiAgaDMge1xuICAgIGZvbnQtc2l6ZTogMS4yNTBlbTtcbiAgfVxuXG4gIGg0IHtcbiAgICBmb250LXNpemU6IDEuMDQyZW07XG4gIH1cblxuICBoNSB7XG4gICAgZm9udC1zaXplOiAwLjkzOGVtO1xuICB9XG5cbiAgaDYge1xuICAgIGZvbnQtc2l6ZTogMC44NzVlbTtcbiAgfVxuXG5cbiAgc21hbGwsIC5zbWFsbCB7XG4gICAgY29sb3I6ICR0ZXh0LWxpZ2h0O1xuICAgIGZvbnQtc2l6ZTogJHRleHQtYm9keS1zbWFsbDtcbiAgfVxuXG4gIGEge1xuICAgIGNvbG9yOiAkdGV4dC1kYXJrO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIH1cblxuICAuYWRkaXRpb25hbC1pbmZvcm1hdGlvbiB7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIGNvbG9yOiAkdGV4dC1saWdodDtcbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL34vaDVwLXNkay9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX3R5cG9ncmFwaHkuc2NzcyIsIkBpbXBvcnQgXCJjb2xvcnNcIjtcblxuLy8gdGV4dFxuJHRleHQtdGl0bGUtbGFyZ2U6IDEuNDU4ZW0gIWRlZmF1bHQ7XG4kdGV4dC10aXRsZS1zbWFsbDogMS4yNTBlbSAhZGVmYXVsdDtcbiR0ZXh0LWJvZHktbGFyZ2U6IDAuOTE3ZW0gIWRlZmF1bHQ7XG4kdGV4dC1ib2R5LXNtYWxsOiAwLjgzM2VtICFkZWZhdWx0O1xuJHRleHQtbGlzdC10aXRsZTogMS4wNDJlbSAhZGVmYXVsdDtcblxuLy8gbGF5b3V0XG4kZ3V0dGVyOiAwLjgzM2VtICFkZWZhdWx0O1xuJGJvcmRlci13aWR0aDogMC4xMjVlbSAhZGVmYXVsdDtcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL192YXJpYWJsZXMuc2NzcyIsIi8vIG1haW4gY29sb3JzXG4kYzE6ICM2OTc1ODUgIWRlZmF1bHQ7XG4kYzI6ICNjZWQ2ZTMgIWRlZmF1bHQ7XG4kYzM6ICNmM2YzZjMgIWRlZmF1bHQ7XG5cbi8vIGRlcml2ZWQgY29sb3JzXG4kYzQ6IGRhcmtlbigkYzEsIDE1JSk7IC8vICM0ZjU3NjJcbiRjNTogZGFya2VuKCRjMSwgMzAlKTsgLy8gIzFmMjIyN1xuJGM2OiBkYXJrZW4oJGMzLCA1MCUpOyAvLyAjNzE3NTdlXG5cbi8vIHNlbWFudGljIGNvbG9yc1xuJGFjMTogIzBhNzhkMSAhZGVmYXVsdDtcbiRhYy13YXJuaW5nOiAjZmZjYzMzICFkZWZhdWx0O1xuJGFjLXN1Y2Nlc3M6ICMwMGFhNTQgIWRlZmF1bHQ7XG4kYWMtZXJyb3I6ICNjNjQ3NTAgIWRlZmF1bHQ7XG4kdGV4dC1kYXJrOiAjMWYyMjI3ICFkZWZhdWx0O1xuJHRleHQtbGlnaHQ6ICM3MTc1N2UgIWRlZmF1bHQ7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL19jb2xvcnMuc2NzcyIsIkBpbXBvcnQgXCIuLi9iYXNlL2NvbG9yc1wiO1xuQGltcG9ydCBcIi4uL2Jhc2UvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwiLi4vYmFzZS9taXhpbnNcIjtcblxuQG1peGluIGJ1dHRvbi1maWxsZWQoJGJhY2tncm91bmQtY29sb3IsICRjb2xvcikge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmFja2dyb3VuZC1jb2xvcjtcbiAgY29sb3I6ICRjb2xvcjtcblxuICAmOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRiYWNrZ3JvdW5kLWNvbG9yLCAxMCUpO1xuICB9XG5cbiAgJjphY3RpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGRhcmtlbigkYmFja2dyb3VuZC1jb2xvciwgMTAlKTtcbiAgfVxuXG4gICZbZGlzYWJsZWRdIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRiYWNrZ3JvdW5kLWNvbG9yLCA0MCUpO1xuICB9XG59XG5cbkBtaXhpbiBidXR0b24taW52ZXJzZSgkYmFja2dyb3VuZC1jb2xvciwgJGNvbG9yKSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG9yO1xuICBjb2xvcjogJGNvbG9yO1xuICBib3JkZXI6IDAuMTI1ZW0gc29saWQgJGNvbG9yO1xuXG4gICY6aG92ZXIge1xuICAgIGNvbG9yOiBsaWdodGVuKCRjb2xvciwgMTAlKTtcbiAgICBib3JkZXItY29sb3I6IGxpZ2h0ZW4oJGNvbG9yLCAxMCUpO1xuICB9XG5cbiAgJjphY3RpdmUge1xuICAgIGNvbG9yOiBkYXJrZW4oJGNvbG9yLCAxMCUpO1xuICAgIGJvcmRlci1jb2xvcjogZGFya2VuKCRjb2xvciwgMTAlKTtcbiAgfVxuXG4gICZbZGlzYWJsZWRdIHtcbiAgICBjb2xvcjogbGlnaHRlbigkY29sb3IsIDQwJSk7XG4gICAgYm9yZGVyLWNvbG9yOiBsaWdodGVuKCRjb2xvciwgNDAlKTtcbiAgfVxufVxuXG4uaDVwIHtcbiAgLmJ1dHRvbiB7XG4gICAgZm9udC1zaXplOiAkdGV4dC1ib2R5LXNtYWxsO1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIHBhZGRpbmc6IDAuNzA4ZW0gMS4zNzVlbTtcbiAgICBib3JkZXItcmFkaXVzOiAxLjM3NWVtO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjMztcbiAgICBjb2xvcjogJHRleHQtZGFyaztcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJvcmRlcjogdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuMzVzIGVhc2U7XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIEBpbmNsdWRlIGJsdWVHbG93XG4gICAgfVxuXG4gICAgJi5idXR0b24tcHJpbWFyeSB7XG4gICAgICBAaW5jbHVkZSBidXR0b24tZmlsbGVkKCRhYzEsIHdoaXRlKTtcbiAgICB9XG5cbiAgICAmLmJ1dHRvbi1pbnZlcnNlLXByaW1hcnkge1xuICAgICAgQGluY2x1ZGUgYnV0dG9uLWludmVyc2Uod2hpdGUsICRhYzEpO1xuICAgIH1cbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL34vaDVwLXNkay9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwiQGltcG9ydCAnY29sb3JzJztcblxuQG1peGluIGJveC1zaGFkb3coJHRvcCwgJGxlZnQsICRibHVyLCAkc3ByZWFkLCAkY29sb3IsICRpbnNldDogZmFsc2UpIHtcbiAgIEBpZiAkaW5zZXQge1xuICAgICAgLXdlYmtpdC1ib3gtc2hhZG93Omluc2V0ICR0b3AgJGxlZnQgJGJsdXIsICRzcHJlYWQgJGNvbG9yO1xuICAgICAgLW1vei1ib3gtc2hhZG93Omluc2V0ICR0b3AgJGxlZnQgJGJsdXIgJHNwcmVhZCAkY29sb3I7XG4gICAgICBib3gtc2hhZG93Omluc2V0ICR0b3AgJGxlZnQgJGJsdXIgJHNwcmVhZCAkY29sb3I7XG4gICB9XG4gICBAZWxzZSB7XG4gICAgICAtd2Via2l0LWJveC1zaGFkb3c6ICR0b3AgJGxlZnQgJGJsdXIgJHNwcmVhZCAkY29sb3I7XG4gICAgICAtbW96LWJveC1zaGFkb3c6ICR0b3AgJGxlZnQgJGJsdXIgJHNwcmVhZCAkY29sb3I7XG4gICAgICBib3gtc2hhZG93OiAkdG9wICRsZWZ0ICRibHVyICRzcHJlYWQgJGNvbG9yO1xuICAgfVxufVxuXG5AbWl4aW4gb3B0aW9uYWwtYXQtcm9vdCgkc2VsKSB7XG4gIEBhdC1yb290ICN7aWYobm90ICYsICRzZWwsIHNlbGVjdG9yLWFwcGVuZCgmLCAkc2VsKSl9IHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG5AbWl4aW4gcGxhY2Vob2xkZXIge1xuICBAaW5jbHVkZSBvcHRpb25hbC1hdC1yb290KCc6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXInKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cblxuICBAaW5jbHVkZSBvcHRpb25hbC1hdC1yb290KCc6LW1vei1wbGFjZWhvbGRlcicpIHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gIEBpbmNsdWRlIG9wdGlvbmFsLWF0LXJvb3QoJzo6LW1vei1wbGFjZWhvbGRlcicpIHtcbiAgICBAY29udGVudDtcbiAgfVxuXG4gIEBpbmNsdWRlIG9wdGlvbmFsLWF0LXJvb3QoJzotbXMtaW5wdXQtcGxhY2Vob2xkZXInKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGJsdWVHbG93IHtcbiAgIG91dGxpbmU6IDA7XG4gICBib3gtc2hhZG93OiAwLjA2ZW0gMCAwLjZlbSAwLjFlbSBsaWdodGVuKCRhYzEsIDMwJSk7XG4gICAvL0BpbmNsdWRlIGJveC1zaGFkb3coMC4wNmVtLCAwLCAwLjZlbSwgMC4xZW0sIGxpZ2h0ZW4oJGFjMSwgMzAlKSlcbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL19taXhpbnMuc2NzcyIsIi5oNXAge1xuICAuaW1nLXJlc3BvbnNpdmUge1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2s6Ly8vfi9oNXAtc2RrL3NyYy9zdHlsZXMvY29tcG9uZW50cy9faW1hZ2VzLnNjc3MiLCJAaW1wb3J0IFwiLi4vYmFzZS9jb2xvcnNcIjtcbkBpbXBvcnQgXCIuLi9iYXNlL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIi4uL2Jhc2UvbWl4aW5zXCI7XG5cbi5oNXAge1xuICAvKiBGb3JtIGNvbnRyb2wgKi9cbiAgLmZvcm0tY29udHJvbCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgcGFkZGluZzogJGd1dHRlcjtcbiAgICBmb250LXNpemU6ICR0ZXh0LWJvZHktbGFyZ2U7XG4gICAgYm9yZGVyOiAwLjEyNWVtIHNvbGlkICRjMjtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gICAgQGluY2x1ZGUgcGxhY2Vob2xkZXIge1xuICAgICAgY29sb3I6ICRjMjtcbiAgICB9XG5cbiAgICAmLmZvcm0tY29udHJvbC1yb3VuZGVkIHtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDJlbTtcbiAgICB9XG5cbiAgICAmOmZvY3VzIHtcbiAgICAgIEBpbmNsdWRlIGJsdWVHbG93XG4gICAgfVxuICB9XG5cbiAgLyogSW5wdXQgR3JvdXAgKi9cbiAgLmlucHV0LWdyb3VwIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICAuaW5wdXQtZ3JvdXAtYWRkb24ge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgdG9wOiAwLjVlbTtcbiAgICAgIHJpZ2h0OiAxZW07XG4gICAgfVxuICB9XG59XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2s6Ly8vfi9oNXAtc2RrL3NyYy9zdHlsZXMvY29tcG9uZW50cy9faW5wdXQtZmllbGQuc2NzcyIsIkBpbXBvcnQgXCIuLi9iYXNlL2NvbG9yc1wiO1xuQGltcG9ydCBcIi4uL2Jhc2UvdmFyaWFibGVzXCI7XG5cbi5oNXAge1xuICAucGFuZWwge1xuICAgIGJvcmRlcjogMC4wNDJlbSBzb2xpZCAkYzI7XG5cbiAgICAucGFuZWwtaGVhZGVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRjMztcbiAgICAgIGNvbG9yOiAkdGV4dC1kYXJrO1xuICAgICAgcGFkZGluZzogJGd1dHRlcjtcblxuICAgICAgJlthcmlhLWV4cGFuZGVkXSB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAucGFuZWwtYm9keSB7XG4gICAgICAmW2FyaWEtaGlkZGVuPVwidHJ1ZVwiXSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICB9XG5cbiAgICAgIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgICAgIC5wYW5lbC1ib2R5LWlubmVyIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMC4wNDJlbSBzb2xpZCAkYzI7XG4gICAgICAgIHBhZGRpbmc6ICRndXR0ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLnBhbmVsLWdyb3VwIHtcbiAgICAucGFuZWw6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgbWFyZ2luLXRvcDogLTFweDtcbiAgICB9XG4gIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19wYW5lbC5zY3NzIiwiQGltcG9ydCBcIi4uL2Jhc2UvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwiLi4vYmFzZS9taXhpbnNcIjtcblxuLmg1cCB7XG4gIC50YWItcGFuZWwge1xuICAgIGJvcmRlcjogMC4wNDJlbSBzb2xpZCAkYzI7XG5cbiAgICBbcm9sZT1cInRhYmxpc3RcIl0ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGMzO1xuICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICAgIHBhZGRpbmc6IDA7XG4gICAgICBtYXJnaW46IDA7XG4gICAgICBib3JkZXItYm90dG9tOiAwLjA0MmVtIHNvbGlkICRjMjtcbiAgICB9XG5cbiAgICBbcm9sZT1cInRhYlwiXSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBwYWRkaW5nOiAkZ3V0dGVyO1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgY29sb3I6ICR0ZXh0LWRhcms7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICZbYXJpYS1zZWxlY3RlZD1cInRydWVcIl0ge1xuICAgICAgICBAaW5jbHVkZSBib3gtc2hhZG93KDAsIC01cHgsIDAsIDAsICRhYzEsIHRydWUpO1xuICAgICAgfVxuICAgIH1cblxuICAgIFtyb2xlPVwidGFicGFuZWxcIl0ge1xuICAgICAgLnRhYi1wYW5lbC1pbm5lciB7XG4gICAgICAgIHBhZGRpbmc6ICRndXR0ZXI7XG4gICAgICB9XG5cbiAgICAgICZbYXJpYS1oaWRkZW49XCJ0cnVlXCJdIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL190YWItcGFuZWwuc2NzcyIsIkBpbXBvcnQgXCIuLi9iYXNlL2NvbG9yc1wiO1xuQGltcG9ydCBcIi4uL2Jhc2UvdmFyaWFibGVzXCI7XG5cbi5oNXAge1xuICAuaDVwLW1lbnUge1xuICAgIGJvcmRlcjogMC4wNDJlbSBzb2xpZCAkYzI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGMzO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgY29sb3I6ICR0ZXh0LWRhcms7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDAgMCAkZ3V0dGVyIDA7XG5cbiAgICBbcm9sZT1cIm1lbnVpdGVtXCJdIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIHBhZGRpbmc6ICRndXR0ZXI7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICZbYXJpYS1zZWxlY3RlZD1cInRydWVcIl0ge1xuICAgICAgICBib3gtc2hhZG93OiBpbnNldCAwIC01cHggJGFjMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L2g1cC1zZGsvc3JjL3N0eWxlcy9jb21wb25lbnRzL19tZW51LnNjc3MiLCJAaW1wb3J0IFwiLi4vYmFzZS9jb2xvcnNcIjtcbkBpbXBvcnQgXCIuLi9iYXNlL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIi4uL2Jhc2UvbWl4aW5zXCI7XG5cblxuQG1peGluIG1lc3NhZ2UtbGV2ZWwoJGJhY2tncm91bmQsICRjb2xvcikge1xuICBAaW5jbHVkZSBib3gtc2hhZG93KDAuMTY3ZW0gMCwgMCwgMCwgJGJhY2tncm91bmQsIHRydWUpO1xuICBiYWNrZ3JvdW5kOiByZ2JhKCRiYWNrZ3JvdW5kLCAwLjE1KTtcblxuICAuYnV0dG9uIHtcbiAgICBjb2xvcjogJGNvbG9yO1xuICAgIGJvcmRlcjogc29saWQgMXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG5cbi5tZXNzYWdlIHtcbiAgbWFyZ2luOiAkZ3V0dGVyIDA7XG4gIHBhZGRpbmc6IDEuMjUwZW07XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuXG4gIGgzIHtcbiAgICBmb250LXNpemU6ICR0ZXh0LWxpc3QtdGl0bGU7XG4gICAgY29sb3I6ICR0ZXh0LWRhcms7XG4gIH1cblxuICBwIHtcbiAgICBmb250LXNpemU6ICR0ZXh0LWJvZHktc21hbGw7XG4gICAgY29sb3I6ICR0ZXh0LWxpZ2h0O1xuICB9XG5cbiAgLmNsb3NlIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cbi5pbmZvIHtcbiAgQGluY2x1ZGUgbWVzc2FnZS1sZXZlbCgkYWMtc3VjY2VzcywgJGFjLXN1Y2Nlc3MpO1xuICBib3gtc2hhZG93OiBpbnNldCAwLjE2N2VtIDAgJGFjLXN1Y2Nlc3M7XG59XG5cbi5zdWNjZXNzIHtcbiAgQGluY2x1ZGUgbWVzc2FnZS1sZXZlbCgkYWMtd2FybmluZywgJHRleHQtZGFyayk7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAuMTY3ZW0gMCAkYWMtd2FybmluZztcbn1cblxuLmVycm9yIHtcbiAgQGluY2x1ZGUgbWVzc2FnZS1sZXZlbCgkYWMtZXJyb3IsICRhYy1lcnJvcik7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAuMTY3ZW0gMCAkYWMtZXJyb3I7XG59XG5cbi5kaXNtaXNzaWJsZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xuXG4gIC5tZXNzYWdlLWNvbnRlbnQge1xuICAgIGZsb2F0OiByaWdodDtcbiAgfVxuXG4gIC5jbG9zZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBhZGRpbmctdG9wOiAxLjI1MGVtO1xuICAgIHBhZGRpbmctbGVmdDogMS4yNTBlbTtcbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL34vaDVwLXNkay9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX21lc3NhZ2Uuc2NzcyIsIkBpbXBvcnQgXCJ+aDVwLXNkay9zcmMvc3R5bGVzL2Jhc2UvY29sb3JzXCI7XG5cbi8qIFNlY3Rpb24gY29sb3JzICovXG4kY29sb3Itc2VjdGlvbi1jb250ZW50LXR5cGVzOiAjMGE3OGQxO1xuJGNvbG9yLXNlY3Rpb24tdXBsb2FkOiAjZGI2ZjI4O1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL3NyYy9zdHlsZXMvYmFzZS9fY29sb3JzLnNjc3MiLCJAaW1wb3J0IFwiLi4vYmFzZS9jb2xvcnNcIjtcbkBpbXBvcnQgXCJ+aDVwLXNkay9zcmMvc3R5bGVzL2Jhc2UvY29sb3JzXCI7XG5AaW1wb3J0IFwifmg1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL21peGluc1wiO1xuQGltcG9ydCB1cmwoJ2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1PcGVuK1NhbnMnKTtcblxuQG1peGluIGg1cC1odWItaWNvbigkY2hhcikge1xuICBmb250LWZhbWlseTogJ2g1cCcgIWltcG9ydGFudDtcbiAgY29udGVudDogJGNoYXI7XG4gIHNwZWFrOiBub25lO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtdmFyaWFudDogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgbGluZS1oZWlnaHQ6IDE7XG59XG5cbkBtaXhpbiBzZWN0aW9uKCRjb2xvcikge1xuICAmW29wZW5dIHtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkY29sb3I7XG4gIH1cblxuICBbcm9sZT1cIm1lbnVpdGVtXCJdW2FyaWEtc2VsZWN0ZWQ9XCJ0cnVlXCJdLFxuICBbcm9sZT1cInRhYlwiXVthcmlhLXNlbGVjdGVkPVwidHJ1ZVwiXSB7XG4gICAgQGluY2x1ZGUgYm94LXNoYWRvdygwLCAtNXB4LCAwLCAwLCAkY29sb3IsIHRydWUpO1xuICB9XG5cbiAgLmJ1dHRvbi5idXR0b24tcHJpbWFyeSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbG9yO1xuICB9XG5cbiAgLmJ1dHRvbi5idXR0b24taW52ZXJzZS1wcmltYXJ5IHtcbiAgICBib3JkZXItY29sb3I6ICRjb2xvcjtcbiAgICBjb2xvcjogJGNvbG9yO1xuICB9XG5cbiAgLmljb24tc2VhcmNoIHtcbiAgICBjb2xvcjogJGNvbG9yO1xuICB9XG59XG5cbi5oNXAuaDVwLWh1YiB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcblxuICAucGFuZWwge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICRjMTtcblxuICAgICY+LnBhbmVsLWhlYWRlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgIGNvbG9yOiAkYzE7XG4gICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuXG4gICAgICAmOmJlZm9yZSB7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxZW07XG4gICAgICB9XG5cbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBAaW5jbHVkZSBoNXAtaHViLWljb24oXCJcXGU5MjRcIik7XG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAmLmg1cC1zZWN0aW9uLWNyZWF0ZS1jb250ZW50IHtcbiAgICAgIEBpbmNsdWRlIHNlY3Rpb24oJGNvbG9yLXNlY3Rpb24tY29udGVudC10eXBlcyk7XG4gICAgfVxuXG4gICAgJi5oNXAtc2VjdGlvbi11cGxvYWQge1xuICAgICAgQGluY2x1ZGUgc2VjdGlvbigkY29sb3Itc2VjdGlvbi11cGxvYWQpO1xuICAgIH1cbiAgfVxuXG4gIC50YWItcGFuZWwge1xuICAgIGJvcmRlcjogbm9uZTtcblxuICAgIFthcmlhLWhpZGRlbj0ndHJ1ZSddIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgPiBuYXYgPiBbcm9sZT1cInRhYmxpc3RcIl0ge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGM0O1xuICAgICAgYm9yZGVyLWJvdHRvbTogbm9uZTtcblxuICAgICAgW3JvbGU9XCJ0YWJcIl0ge1xuICAgICAgICBjb2xvcjogJGMzO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL3NyYy9zdHlsZXMvY29tcG9uZW50cy9faHViLnNjc3MiLCJAaW1wb3J0IFwiLi4vYmFzZS9jb2xvcnNcIjtcbkBpbXBvcnQgXCJ+aDVwLXNkay9zcmMvc3R5bGVzL2Jhc2UvY29sb3JzXCI7XG5cbi5oNXAtaHViIHtcbiAgLm1lbnUtZ3JvdXAge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRjMTtcbiAgICBwYWRkaW5nLXRvcDogMS4xMjVlbTtcbiAgICBwYWRkaW5nLWJvdHRvbTogMi4yNTBlbTtcbiAgICBwYWRkaW5nLWxlZnQ6IDIuMjUwZW07XG4gICAgcGFkZGluZy1yaWdodDogMi4yNTBlbTtcblxuICAgIC5tZW51IHtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgYm9yZGVyOiAwO1xuICAgICAgYm9yZGVyLWJvdHRvbTogc29saWQgMXB4ICM5Q0E1QjQ7XG4gICAgICBtYXJnaW4tbGVmdDogMi4yNWVtO1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyLjI1ZW07XG5cbiAgICAgIG5hdiB7XG4gICAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIH1cblxuICAgICAgdWwge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICAgICAgYm9yZGVyOiBub25lO1xuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBjb2xvcjogJGMzO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC5tZW51LXRpdGxlIHtcbiAgICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLmlucHV0LWdyb3VwIHtcbiAgICAgIHBhZGRpbmc6IDAuNGVtO1xuICAgICAgbWFyZ2luLXRvcDogMS4xMjVlbTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgYm9yZGVyLXJhZGl1czogMmVtO1xuXG4gICAgICBpbnB1dCB7XG4gICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuaWNvbi1zZWFyY2gge1xuICAgICAgZm9udC1zaXplOiAyLjVlbTtcbiAgICAgIHRvcDogMC4yZW07XG4gICAgICByaWdodDogMC4yNWVtO1xuICAgIH1cbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fY29udGVudC10eXBlLXNlY3Rpb24uc2NzcyIsIkBpbXBvcnQgXCJ+aDVwLXNkay9zcmMvc3R5bGVzL2Jhc2UvY29sb3JzXCI7XG5AaW1wb3J0IFwifmg1cC1zZGsvc3JjL3N0eWxlcy9iYXNlL3ZhcmlhYmxlc1wiO1xuQGltcG9ydCBcIn5zdXN5L3Nhc3Mvc3VzeVwiO1xuXG4uaDVwLWh1YiB7XG4gIFthcmlhLWhpZGRlbj1cInRydWVcIl0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAuY29udGVudC10eXBlLWRldGFpbCB7XG4gICAgcGFkZGluZzogJGd1dHRlcjtcblxuICAgIC5jb250YWluZXIge1xuICAgICAgQGluY2x1ZGUgY29udGFpbmVyO1xuICAgIH1cblxuICAgIC5pbWFnZS13cmFwcGVyIHtcbiAgICAgIEBpbmNsdWRlIHNwYW4oZmlyc3QgNCBvZiAxMik7XG4gICAgfVxuXG4gICAgLnRleHQtZGV0YWlscyB7XG4gICAgICBAaW5jbHVkZSBzcGFuKGxhc3QgOCBvZiAxMik7XG4gICAgfVxuXG4gICAgLmJ1dHRvbi1iYXIge1xuICAgICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgICBtYXJnaW4tYm90dG9tOiAkZ3V0dGVyO1xuXG4gICAgICAuYnV0dG9uIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgICAgfVxuICAgIH1cblxuICAgIC5iYWNrLWJ1dHRvbiB7XG4gICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgIGNvbG9yOiAkdGV4dC1kYXJrO1xuXG4gICAgICAmOmhvdmVyIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4oJHRleHQtZGFyaywgMjAlKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9zcmMvc3R5bGVzL2NvbXBvbmVudHMvX2NvbnRlbnQtdHlwZS1kZXRhaWwuc2NzcyIsIi8vIHJlbSBTdXBwb3J0XG4vLyA9PT09PT09PT09PVxuXG4vLyByZW1cbi8vIC0tLVxuLy8gQ2hlY2sgZm9yIGFuIGV4aXN0aW5nIHN1cHBvcnQgbWl4aW4sIG9yIG91dHB1dCBkaXJlY3RseS5cbi8vIC0gJHByb3AgIDogPGNzcyBwcm9wZXJ0eT5cbi8vIC0gJHZhbCAgIDogPGNzcyB2YWx1ZT5cbkBtaXhpbiBzdXN5LXJlbShcbiAgJHByb3AsXG4gICR2YWxcbikge1xuICAkX3JlcXM6IChcbiAgICB2YXJpYWJsZTogcmh5dGhtLXVuaXQgcmVtLXdpdGgtcHgtZmFsbGJhY2ssXG4gICAgbWl4aW46IHJlbSxcbiAgKTtcbiAgQGlmIHN1c3ktc3VwcG9ydChyZW0sICRfcmVxcywgJHdhcm46IGZhbHNlKSBhbmQgJHJoeXRobS11bml0ID09IHJlbSB7XG4gICAgQGluY2x1ZGUgcmVtKCRwcm9wLCAkdmFsKTtcbiAgfSBAZWxzZSB7XG4gICAgI3skcHJvcH06ICR2YWw7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL34vc3VzeS9zYXNzL3N1c3kvb3V0cHV0L3N1cHBvcnQvX3JlbS5zY3NzIiwiLy8gQ29udGFpbmVyIFN5bnRheFxuLy8gPT09PT09PT09PT09PT09PVxuXG4vLyBDb250YWluZXIgW21peGluXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFNldCBhIGNvbnRhaW5lciBlbGVtZW50XG4vLyAtIFskbGF5b3V0XSAgOiA8c2V0dGluZ3M+XG5AbWl4aW4gY29udGFpbmVyKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRpbnNwZWN0ICAgIDogJGxheW91dDtcbiAgJGxheW91dCAgICAgOiBwYXJzZS1ncmlkKCRsYXlvdXQpO1xuXG4gICRfd2lkdGggICAgIDogZ2V0LWNvbnRhaW5lci13aWR0aCgkbGF5b3V0KTtcbiAgJF9qdXN0aWZ5ICAgOiBwYXJzZS1jb250YWluZXItcG9zaXRpb24oc3VzeS1nZXQoY29udGFpbmVyLXBvc2l0aW9uLCAkbGF5b3V0KSk7XG4gICRfcHJvcGVydHkgIDogaWYoc3VzeS1nZXQobWF0aCwgJGxheW91dCkgPT0gc3RhdGljLCB3aWR0aCwgbWF4LXdpZHRoKTtcblxuICAkX2JveCAgICAgICA6IHN1c3ktZ2V0KGJveC1zaXppbmcsICRsYXlvdXQpO1xuXG4gIEBpZiAkX2JveCB7XG4gICAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiAkX2JveCkpO1xuICB9XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KGNvbnRhaW5lciwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBmbG9hdC1jb250YWluZXIoJF93aWR0aCwgJF9qdXN0aWZ5LCAkX3Byb3BlcnR5KTtcbiAgQGluY2x1ZGUgc2hvdy1ncmlkKCRsYXlvdXQpO1xufVxuXG4vLyBDb250YWluZXIgW2Z1bmN0aW9uXVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBjb250YWluZXIgd2lkdGhcbi8vIC0gWyRsYXlvdXRdICA6IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBjb250YWluZXIoXG4gICRsYXlvdXQ6ICRzdXN5XG4pIHtcbiAgJGxheW91dDogcGFyc2UtZ3JpZCgkbGF5b3V0KTtcbiAgQHJldHVybiBnZXQtY29udGFpbmVyLXdpZHRoKCRsYXlvdXQpO1xufVxuXG4vLyBHZXQgQ29udGFpbmVyIFdpZHRoXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyBDYWxjdWxhdGUgdGhlIGNvbnRhaW5lciB3aWR0aFxuLy8gLSBbJGxheW91dF06IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBnZXQtY29udGFpbmVyLXdpZHRoKFxuICAkbGF5b3V0OiAkc3VzeVxuKSB7XG4gICRsYXlvdXQgICAgICAgICA6IHBhcnNlLWdyaWQoJGxheW91dCk7XG4gICRfd2lkdGggICAgICAgICA6IHN1c3ktZ2V0KGNvbnRhaW5lciwgJGxheW91dCk7XG4gICRfY29sdW1uLXdpZHRoICA6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJGxheW91dCk7XG4gICRfbWF0aCAgICAgICAgICA6IHN1c3ktZ2V0KG1hdGgsICRsYXlvdXQpO1xuXG4gIEBpZiBub3QoJF93aWR0aCkgb3IgJF93aWR0aCA9PSBhdXRvIHtcbiAgICBAaWYgdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCkge1xuICAgICAgJF9jb2x1bW5zICAgOiBzdXN5LWdldChjb2x1bW5zLCAkbGF5b3V0KTtcbiAgICAgICRfZ3V0dGVycyAgIDogc3VzeS1nZXQoZ3V0dGVycywgJGxheW91dCk7XG4gICAgICAkX3NwcmVhZCAgICA6IGlmKGlzLXNwbGl0KCRsYXlvdXQpLCB3aWRlLCBuYXJyb3cpO1xuICAgICAgJF93aWR0aCAgICAgOiBzdXN5LXN1bSgkX2NvbHVtbnMsICRfZ3V0dGVycywgJF9zcHJlYWQpICogJF9jb2x1bW4td2lkdGg7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkX3dpZHRoOiAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJF93aWR0aDtcbn1cblxuLy8gUGFyc2UgQ29udGFpbmVyIFBvc2l0aW9uXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFBhcnNlIHRoZSAkY29udGFpbmVyLXBvc2l0aW9uIGludG8gbWFyZ2luIHZhbHVlcy5cbi8vIC0gWyRqdXN0aWZ5XSAgIDogbGVmdCB8IGNlbnRlciB8IHJpZ2h0IHwgPGxlbmd0aD4gWzxsZW5ndGg+XVxuQGZ1bmN0aW9uIHBhcnNlLWNvbnRhaW5lci1wb3NpdGlvbihcbiAgJGp1c3RpZnk6IG1hcC1nZXQoJHN1c3ktZGVmYXVsdHMsIGNvbnRhaW5lci1wb3NpdGlvbilcbikge1xuICAkX3JldHVybjogaWYoJGp1c3RpZnkgPT0gbGVmdCwgMCwgYXV0bykgaWYoJGp1c3RpZnkgPT0gcmlnaHQsIDAsIGF1dG8pO1xuXG4gIEBpZiBub3QoaW5kZXgobGVmdCByaWdodCBjZW50ZXIsICRqdXN0aWZ5KSkge1xuICAgICRfcmV0dXJuOiBudGgoJGp1c3RpZnksIDEpO1xuICAgICRfcmV0dXJuOiAkX3JldHVybiBpZihsZW5ndGgoJGp1c3RpZnkpID4gMSwgbnRoKCRqdXN0aWZ5LCAyKSwgJF9yZXR1cm4pO1xuICB9XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL34vc3VzeS9zYXNzL3N1c3kvbGFuZ3VhZ2Uvc3VzeS9fY29udGFpbmVyLnNjc3MiLCIvLyBTdXN5IEZhbGxiYWNrIENsZWFyZml4XG4vLyA9PT09PT09PT09PT09PT09PT09PT09XG5cblxuLy8gQ2xlYXJmaXhcbi8vIC0tLS0tLS0tXG4vLyBDaGVjayBmb3IgYW4gZXhpc3Rpbmcgc3VwcG9ydCBtaXhpbiwgb3IgcHJvdmlkZSBhIHNpbXBsZSBmYWxsYmFjay5cbkBtaXhpbiBzdXN5LWNsZWFyZml4IHtcbiAgQGlmIHN1c3ktc3VwcG9ydChjbGVhcmZpeCwgKG1peGluOiBjbGVhcmZpeCkpIHtcbiAgICBAaW5jbHVkZSBjbGVhcmZpeDtcbiAgfSBAZWxzZSB7XG4gICAgJjphZnRlciB7XG4gICAgICBjb250ZW50OiBcIiBcIjtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY2xlYXI6IGJvdGg7XG4gICAgfVxuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zdXBwb3J0L19jbGVhcmZpeC5zY3NzIiwiLy8gU3BhbiBTeW50YXhcbi8vID09PT09PT09PT09XG5cbi8vIFNwYW4gW21peGluXVxuLy8gLS0tLS0tLS0tLS0tXG4vLyBTZXQgYSBzcGFubmluZyBlbGVtZW50IHVzaW5nIHNob3J0aGFuZCBzeW50YXguXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQG1peGluIHNwYW4oXG4gICRzcGFuXG4pIHtcbiAgJGluc3BlY3Q6ICRzcGFuO1xuICAkc3BhbjogcGFyc2Utc3Bhbigkc3Bhbik7XG4gICRvdXRwdXQ6IHNwYW4tbWF0aCgkc3Bhbik7XG4gICRuZXN0aW5nOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRjbGVhcjogc3VzeS1nZXQoY2xlYXIsICRzcGFuKTtcblxuICAkYm94OiBzdXN5LWdldChib3gtc2l6aW5nLCAkc3Bhbik7XG4gICRjb250ZW50LWJveDogaWYoc3VzeS1nZXQoZ2xvYmFsLWJveC1zaXppbmcpICE9ICdib3JkZXItYm94JywgdHJ1ZSwgZmFsc2UpO1xuICAkYm94OiAkYm94IG9yIGlmKGlzLWluc2lkZSgkc3BhbikgYW5kICRjb250ZW50LWJveCwgYm9yZGVyLWJveCwgbnVsbCk7XG5cbiAgQGlmICRjbGVhciA9PSBicmVhayB7XG4gICAgQGluY2x1ZGUgYnJlYWs7XG4gIH0gQGVsc2UgaWYgJGNsZWFyID09IG5vYnJlYWsge1xuICAgIEBpbmNsdWRlIG5vYnJlYWs7XG4gIH1cblxuICBAaW5jbHVkZSBzdXN5LWluc3BlY3Qoc3BhbiwgJGluc3BlY3QpO1xuICBAaW5jbHVkZSBvdXRwdXQoKGJveC1zaXppbmc6ICRib3gpKTtcbiAgQGluY2x1ZGUgZmxvYXQtc3Bhbi1vdXRwdXQoJG91dHB1dC4uLik7XG5cbiAgQGlmIHZhbGlkLWNvbHVtbnMoJG5lc3RpbmcsIHNpbGVudCkge1xuICAgIEBpbmNsdWRlIG5lc3RlZCgkc3BhbikgeyBAY29udGVudDsgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBTcGFuIFtmdW5jdGlvbl1cbi8vIC0tLS0tLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSB3aWR0aCBvZiBhIHNwYW4uXG4vLyAtICRzcGFuICA6IDxzcGFuPlxuQGZ1bmN0aW9uIHNwYW4oXG4gICRzcGFuXG4pIHtcbiAgQHJldHVybiBnZXQtc3Bhbi13aWR0aCgkc3Bhbik7XG59XG5cbi8vIFNwYW4gTWF0aFxuLy8gLS0tLS0tLS0tXG4vLyBHZXQgYWxsIHRoZSBzcGFuIHJlc3VsdHMuXG4vLyAtICRzcGFuOiA8bWFwPlxuQGZ1bmN0aW9uIHNwYW4tbWF0aChcbiAgJHNwYW5cbikge1xuICAkbmVzdCAgICAgICAgICAgICA6IGlmKHN1c3ktZ2V0KHJvbGUsICRzcGFuKSA9PSBuZXN0LCB0cnVlLCBmYWxzZSk7XG4gICRzcGxpdC1uZXN0ICAgICAgIDogaWYoaXMtc3BsaXQoJHNwYW4pIGFuZCAkbmVzdCwgdHJ1ZSwgZmFsc2UpO1xuICAkZWRnZSAgICAgICAgICAgICA6IGdldC1lZGdlKCRzcGFuKTtcbiAgJGxvY2F0aW9uICAgICAgICAgOiBnZXQtbG9jYXRpb24oJHNwYW4pO1xuXG4gICRmbG9hdCAgICAgICAgICAgIDogZnJvbTtcbiAgJHBhZGRpbmctYmVmb3JlICAgOiBudWxsO1xuICAkcGFkZGluZy1hZnRlciAgICA6IG51bGw7XG4gICRtYXJnaW4tYmVmb3JlICAgIDogbnVsbDtcbiAgJG1hcmdpbi1hZnRlciAgICAgOiBudWxsO1xuXG4gIC8vIGNhbGN1bGF0ZSB3aWR0aHNcbiAgJHNwcmVhZDogaW5kZXgobWFwLXZhbHVlcygkc3BhbiksIHNwcmVhZCk7XG4gICRzcGFuOiBpZigkc3BsaXQtbmVzdCBhbmQgbm90KCRzcHJlYWQpLCBtYXAtbWVyZ2UoJHNwYW4sIChzcHJlYWQ6IHdpZGUpKSwgJHNwYW4pO1xuICAkd2lkdGg6IGdldC1zcGFuLXdpZHRoKCRzcGFuKTtcbiAgJGd1dHRlcnM6IGdldC1ndXR0ZXJzKCRzcGFuKTtcblxuICAvLyBhcHBseSBndXR0ZXJzXG4gIEBpZiBpcy1pbnNpZGUoJHNwYW4pIHtcbiAgICBAaWYgbm90KHN1c3ktZ2V0KHJvbGUsICRzcGFuKSkge1xuICAgICAgJHBhZGRpbmctYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJHBhZGRpbmctYWZ0ZXI6IG1hcC1nZXQoJGd1dHRlcnMsIGFmdGVyKTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBpZiBub3QoJHNwbGl0LW5lc3QpIHtcbiAgICAgICRtYXJnaW4tYmVmb3JlOiBtYXAtZ2V0KCRndXR0ZXJzLCBiZWZvcmUpO1xuICAgICAgJG1hcmdpbi1hZnRlcjogbWFwLWdldCgkZ3V0dGVycywgYWZ0ZXIpO1xuICAgIH1cbiAgfVxuXG4gIC8vIHNwZWNpYWwgbWFyZ2luIGhhbmRsaW5nXG4gIEBpZiBzdXN5LWdldChvdXRwdXQsICRzcGFuKSA9PSBpc29sYXRlIGFuZCAkbG9jYXRpb24ge1xuICAgICRtYXJnaW4tYmVmb3JlOiBnZXQtaXNvbGF0aW9uKCRzcGFuKTtcbiAgICAkbWFyZ2luLWFmdGVyOiAtMTAwJTtcbiAgfSBAZWxzZSBpZiAkZWRnZSB7XG4gICAgJGlzLXNwbGl0OiBpcy1zcGxpdCgkc3Bhbik7XG4gICAgJHBvczogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkc3Bhbik7XG5cbiAgICBAaWYgJGVkZ2UgPT0gbGFzdCB7XG4gICAgICAkZmxvYXQ6IHN1c3ktZ2V0KGxhc3QtZmxvdywgJHNwYW4pO1xuICAgIH1cblxuICAgIEBpZiBub3QoJGlzLXNwbGl0KSB7XG4gICAgICBAaWYgJGVkZ2UgPT0gZnVsbCBvciAoJGVkZ2UgPT0gZmlyc3QgYW5kICRwb3MgPT0gYmVmb3JlKSB7XG4gICAgICAgICRtYXJnaW4tYmVmb3JlOiAwO1xuICAgICAgfVxuICAgICAgQGlmICRlZGdlID09IGZ1bGwgb3IgKCRlZGdlID09IGxhc3QgYW5kICRwb3MgPT0gYWZ0ZXIpIHtcbiAgICAgICAgJG1hcmdpbi1hZnRlcjogMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgfVxuXG4gIEByZXR1cm4gKFxuICAgIHdpZHRoICAgICAgICAgICA6ICR3aWR0aCxcbiAgICBmbG9hdCAgICAgICAgICAgOiAkZmxvYXQsXG4gICAgbWFyZ2luLWJlZm9yZSAgIDogJG1hcmdpbi1iZWZvcmUsXG4gICAgbWFyZ2luLWFmdGVyICAgIDogJG1hcmdpbi1hZnRlcixcbiAgICBwYWRkaW5nLWJlZm9yZSAgOiAkcGFkZGluZy1iZWZvcmUsXG4gICAgcGFkZGluZy1hZnRlciAgIDogJHBhZGRpbmctYWZ0ZXIsXG4gICAgZmxvdyAgICAgICAgICAgIDogc3VzeS1nZXQoZmxvdywgJHNwYW4pLFxuICApO1xufVxuXG4vLyBHZXQgU3BhbiBXaWR0aFxuLy8gLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBzcGFuIHdpZHRoLlxuLy8gLSAkc3BhbjogPG1hcD5cbkBmdW5jdGlvbiBnZXQtc3Bhbi13aWR0aChcbiAgJHNwYW5cbikge1xuICAkc3BhbiAgICAgOiBwYXJzZS1zcGFuKCRzcGFuKTtcblxuICAkbiAgICAgICAgOiBzdXN5LWdldChzcGFuLCAkc3Bhbik7XG4gICRsb2NhdGlvbiA6IGdldC1sb2NhdGlvbigkc3Bhbik7XG4gICRjb2x1bW5zICA6IHN1c3ktZ2V0KGNvbHVtbnMsICRzcGFuKTtcbiAgJGd1dHRlcnMgIDogc3VzeS1nZXQoZ3V0dGVycywgJHNwYW4pO1xuICAkc3ByZWFkICAgOiBzdXN5LWdldChzcHJlYWQsICRzcGFuKTtcblxuICAkY29udGV4dCAgOiBudWxsO1xuICAkc3Bhbi1zdW0gOiBudWxsO1xuICAkd2lkdGggICAgOiBudWxsO1xuXG4gIEBpZiAkbiA9PSAnZnVsbCcge1xuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xuICAgICRyb2xlOiBzdXN5LWdldChyb2xlLCAkc3Bhbik7XG4gICAgJG46IGlmKCRwb3MgPT0gc3BsaXQgYW5kICRyb2xlICE9IG5lc3QsIHN1c3ktY291bnQoJGNvbHVtbnMpLCAxMDAlKTtcbiAgfVxuXG4gIEBpZiB0eXBlLW9mKCRuKSAhPSBudW1iZXIge1xuICAgIEB3YXJuIFwiKCN7dHlwZS1vZigkbil9KSAjeyRufSBpcyBub3QgYSB2YWxpZCBzcGFuLlwiO1xuICB9IEBlbHNlIGlmIHVuaXRsZXNzKCRuKSB7XG4gICAgJGNvbnRleHQ6IHN1c3ktc3VtKCRjb2x1bW5zLCAkZ3V0dGVycywgaWYoaXMtc3BsaXQoJHNwYW4pLCB3aWRlLCBuYXJyb3cpKTtcbiAgICAkc3ByZWFkOiBpZihpcy1pbnNpZGUoJHNwYW4pLCAkc3ByZWFkIG9yIHdpZGUsICRzcHJlYWQpO1xuICAgICRzcGFuLXN1bTogc3VzeSgkbiwgJGxvY2F0aW9uLCAkY29sdW1ucywgJGd1dHRlcnMsICRzcHJlYWQpO1xuXG4gICAgJF9tYXRoOiBzdXN5LWdldChtYXRoLCAkc3Bhbik7XG4gICAgJF9jb2x1bW4td2lkdGg6IHN1c3ktZ2V0KGNvbHVtbi13aWR0aCwgJHNwYW4pO1xuICAgIEBpZiAkX21hdGggPT0gc3RhdGljIHtcbiAgICAgICR3aWR0aDogJHNwYW4tc3VtICogdmFsaWQtY29sdW1uLW1hdGgoJF9tYXRoLCAkX2NvbHVtbi13aWR0aCk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkd2lkdGg6IHBlcmNlbnRhZ2UoJHNwYW4tc3VtIC8gJGNvbnRleHQpO1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgJHdpZHRoOiAkbjtcbiAgfVxuXG4gIEByZXR1cm4gJHdpZHRoO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHdlYnBhY2s6Ly8vfi9zdXN5L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19zcGFuLnNjc3MiLCIvLyBEaXJlY3Rpb24gSGVscGVyc1xuLy8gPT09PT09PT09PT09PT09PT1cblxuLy8gU3VzeSBGbG93IERlZmF1bHRzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS1cbi8vIC0gUFJJVkFURVxuQGluY2x1ZGUgc3VzeS1kZWZhdWx0cygoXG4gIGZsb3c6IGx0cixcbikpO1xuXG4vLyBHZXQgRGlyZWN0aW9uXG4vLyAtLS0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gdGhlICdmcm9tJyBvciAndG8nIGRpcmVjdGlvbiBvZiBhIGx0ciBvciBydGwgZmxvdy5cbi8vIC0gWyRmbG93XSAgOiBsdHIgfCBydGxcbi8vIC0gWyRrZXldICAgOiBmcm9tIHwgdG9cbkBmdW5jdGlvbiBnZXQtZGlyZWN0aW9uKFxuICAkZmxvdzogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgZmxvdyksXG4gICRrZXk6IGZyb21cbikge1xuICAkcmV0dXJuOiBpZigkZmxvdyA9PSBydGwsIChmcm9tOiByaWdodCwgdG86IGxlZnQpLCAoZnJvbTogbGVmdCwgdG86IHJpZ2h0KSk7XG4gIEByZXR1cm4gbWFwLWdldCgkcmV0dXJuLCAka2V5KTtcbn1cblxuLy8gVG9cbi8vIC0tXG4vLyBSZXR1cm4gdGhlICd0bycgZGlyZWN0aW9uIG9mIGEgZmxvd1xuLy8gLSBbJGZsb3ddICA6IGx0ciB8IHJ0bFxuQGZ1bmN0aW9uIHRvKFxuICAkZmxvdzogbWFwLWdldCgkc3VzeS1kZWZhdWx0cywgZmxvdylcbikge1xuICBAcmV0dXJuIGdldC1kaXJlY3Rpb24oJGZsb3csIHRvKTtcbn1cblxuLy8gRnJvbVxuLy8gLS0tLVxuLy8gUmV0dXJuIHRoZSAnZnJvbScgZGlyZWN0aW9uIG9mIGEgZmxvd1xuLy8gLSBbJGZsb3ddICA6IGx0ciB8IHJ0bFxuQGZ1bmN0aW9uIGZyb20oXG4gICRmbG93OiBtYXAtZ2V0KCRzdXN5LWRlZmF1bHRzLCBmbG93KVxuKSB7XG4gIEByZXR1cm4gZ2V0LWRpcmVjdGlvbigkZmxvdywgZnJvbSk7XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L3N1c3kvc2Fzcy9zdXN5L291dHB1dC9zaGFyZWQvX2RpcmVjdGlvbi5zY3NzIiwiLy8gR3V0dGVyIFN5bnRheFxuLy8gPT09PT09PT09PT09PVxuXG5cbi8vIEd1dHRlcnNcbi8vIC0tLS0tLS1cbi8vIFNldCBndXR0ZXJzIG9uIGFuIGVsZW1lbnQuXG4vLyAtIFskc3Bhbl0gICA6IDxzZXR0aW5ncz5cbkBtaXhpbiBndXR0ZXJzKFxuICAkc3BhbjogJHN1c3lcbikge1xuICAkaW5zcGVjdCAgOiAkc3BhbjtcbiAgJHNwYW4gICAgIDogcGFyc2UtZ3V0dGVycygkc3Bhbik7XG4gICRfZ3V0dGVycyA6IGdldC1ndXR0ZXJzKCRzcGFuKTtcblxuICAkX291dHB1dDogKFxuICAgIGJlZm9yZTogbWFwLWdldCgkX2d1dHRlcnMsIGJlZm9yZSksXG4gICAgYWZ0ZXI6IG1hcC1nZXQoJF9ndXR0ZXJzLCBhZnRlciksXG4gICAgZmxvdzogc3VzeS1nZXQoZmxvdywgJHNwYW4pLFxuICApO1xuXG4gIEBpbmNsdWRlIHN1c3ktaW5zcGVjdChndXR0ZXJzLCAkaW5zcGVjdCk7XG5cbiAgQGlmIGlzLWluc2lkZSgkc3Bhbikge1xuICAgIEBpbmNsdWRlIHBhZGRpbmctb3V0cHV0KCRfb3V0cHV0Li4uKTtcbiAgfSBAZWxzZSB7XG4gICAgQGluY2x1ZGUgbWFyZ2luLW91dHB1dCgkX291dHB1dC4uLik7XG4gIH1cbn1cblxuQG1peGluIGd1dHRlcihcbiAgJHNwYW46ICRzdXN5XG4pIHtcbiAgQGluY2x1ZGUgZ3V0dGVycygkc3Bhbik7XG59XG5cblxuLy8gR3V0dGVyXG4vLyAtLS0tLS1cbi8vIFJldHVybiB0aGUgd2lkdGggb2YgYSBndXR0ZXIuXG4vLyAtIFskc3Bhbl0gICA6IDxzZXR0aW5ncz5cbkBmdW5jdGlvbiBndXR0ZXIoXG4gICRzcGFuOiAkc3VzeVxuKSB7XG4gICRzcGFuOiBwYXJzZS1ndXR0ZXJzKCRzcGFuKTtcblxuICAkX2d1dHRlcnM6IGdldC1ndXR0ZXJzKCRzcGFuKTtcbiAgJF9ndXR0ZXJzOiBtYXAtZ2V0KCRfZ3V0dGVycywgYmVmb3JlKSBvciBtYXAtZ2V0KCRfZ3V0dGVycywgYWZ0ZXIpO1xuXG4gIEByZXR1cm4gJF9ndXR0ZXJzO1xufVxuXG5AZnVuY3Rpb24gZ3V0dGVycyhcbiAgJHNwYW46ICRzdXN5XG4pIHtcbiAgQHJldHVybiBndXR0ZXIoJHNwYW4pO1xufVxuXG5cbi8vIEdldCBHdXR0ZXIgV2lkdGhcbi8vIC0tLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiBndXR0ZXIgd2lkdGguXG4vLyAtIFskY29udGV4dF06IDxjb250ZXh0PlxuQGZ1bmN0aW9uIGdldC1ndXR0ZXItd2lkdGgoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gICRjb250ZXh0ICA6IHBhcnNlLWd1dHRlcnMoJGNvbnRleHQpO1xuXG4gICRfZ3V0dGVycyA6IHN1c3ktZ2V0KGd1dHRlcnMsICRjb250ZXh0KTtcbiAgJF9ndXR0ZXIgIDogc3VzeS1nZXQoZ3V0dGVyLW92ZXJyaWRlLCAkY29udGV4dCk7XG5cbiAgQGlmICRfZ3V0dGVycyBhbmQgKCRfZ3V0dGVycyA+IDApIGFuZCBub3QoJF9ndXR0ZXIpIHtcbiAgICAkX2NvbHVtbi13aWR0aDogc3VzeS1nZXQoY29sdW1uLXdpZHRoLCAkY29udGV4dCk7XG4gICAgJF9tYXRoOiBndXR0ZXItbWF0aCgkY29udGV4dCk7XG4gICAgQGlmICRfbWF0aCA9PSBzdGF0aWMge1xuICAgICAgJF9ndXR0ZXI6ICRfZ3V0dGVycyAqIHZhbGlkLWNvbHVtbi1tYXRoKCRfbWF0aCwgJF9jb2x1bW4td2lkdGgpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJF9jb2x1bW5zIDogc3VzeS1nZXQoY29sdW1ucywgJGNvbnRleHQpO1xuICAgICAgJF9zcHJlYWQgIDogaWYoaXMtc3BsaXQoJGNvbnRleHQpLCB3aWRlLCBzdXN5LWdldChzcHJlYWQsICRjb250ZXh0KSk7XG4gICAgICAkX2d1dHRlciAgOiBwZXJjZW50YWdlKCRfZ3V0dGVycyAvIHN1c3ktc3VtKCRfY29sdW1ucywgJF9ndXR0ZXJzLCAkX3NwcmVhZCkpO1xuICAgIH1cbiAgfVxuXG4gICRfZ3V0dGVyOiBpZigkX2d1dHRlciA9PSAnbm8tZ3V0dGVycycgb3IgJF9ndXR0ZXIgPT0gJ25vLWd1dHRlcicsIG51bGwsICRfZ3V0dGVyKTtcblxuICBAcmV0dXJuICRfZ3V0dGVyO1xufVxuXG5cbi8vIEdldCBHdXR0ZXJzXG4vLyAtLS0tLS0tLS0tLVxuLy8gUmV0dXJuIGJlZm9yZSBhbmQgYWZ0ZXIgZ3V0dGVyIHZhbHVlcy5cbi8vIC0gWyRjb250ZXh0XTogPGNvbnRleHQ+XG5AZnVuY3Rpb24gZ2V0LWd1dHRlcnMoXG4gICRjb250ZXh0OiAkc3VzeVxuKSB7XG4gICRjb250ZXh0ICAgICAgICAgICAgOiBwYXJzZS1ndXR0ZXJzKCRjb250ZXh0KTtcblxuICAkX2d1dHRlci1wb3NpdGlvbiAgIDogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XG4gICRfZ3V0dGVyICAgICAgICAgICAgOiBnZXQtZ3V0dGVyLXdpZHRoKCRjb250ZXh0KTtcblxuICAkX3JldHVybiAgICAgICAgICAgIDogKGJlZm9yZTogbnVsbCwgYWZ0ZXI6IG51bGwpO1xuXG4gIEBpZiBpcy1zcGxpdCgkY29udGV4dCkgYW5kICRfZ3V0dGVyIHtcbiAgICAkX2d1dHRlcjogJF9ndXR0ZXIgLyAyO1xuICAgICRfcmV0dXJuOiBtYXAtbWVyZ2UoJF9yZXR1cm4sIChiZWZvcmU6ICRfZ3V0dGVyLCBhZnRlcjogJF9ndXR0ZXIpKTtcbiAgfSBAZWxzZSB7XG4gICAgJF9yZXR1cm46IG1hcC1tZXJnZSgkX3JldHVybiwgKCRfZ3V0dGVyLXBvc2l0aW9uOiAkX2d1dHRlcikpO1xuICB9XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cblxuXG4vLyBJcyBJbnNpZGVcbi8vIC0tLS0tLS0tLVxuLy8gUmV0dXJucyB0cnVlIGlmIGd1dHRlcnMgYXJlIGluc2lkZS5cbi8vICRjb250ZXh0OiA8Y29udGV4dD5cbkBmdW5jdGlvbiBpcy1pbnNpZGUoXG4gICRjb250ZXh0XG4pIHtcbiAgJF9pbnNpZGU6IGluc2lkZSBpbnNpZGUtc3RhdGljO1xuICAkX2d1dHRlci1wb3NpdGlvbjogc3VzeS1nZXQoZ3V0dGVyLXBvc2l0aW9uLCAkY29udGV4dCk7XG5cbiAgQHJldHVybiBpZihpbmRleCgkX2luc2lkZSwgJF9ndXR0ZXItcG9zaXRpb24pLCB0cnVlLCBmYWxzZSk7XG59XG5cblxuLy8gSXMgU3BsaXRcbi8vIC0tLS0tLS0tXG4vLyBSZXR1cm5zIHRydWUgaWYgZ3V0dGVycyBhcmUgc3BsaXQuXG4vLyAkY29udGV4dDogPGNvbnRleHQ+XG5AZnVuY3Rpb24gaXMtc3BsaXQoXG4gICRjb250ZXh0XG4pIHtcbiAgJF9zcGxpdDogc3BsaXQgaW5zaWRlIGluc2lkZS1zdGF0aWM7XG4gICRfZ3V0dGVyLXBvc2l0aW9uOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRjb250ZXh0KTtcblxuICBAcmV0dXJuIGlmKGluZGV4KCRfc3BsaXQsICRfZ3V0dGVyLXBvc2l0aW9uKSwgdHJ1ZSwgZmFsc2UpO1xufVxuXG5cbi8vIEd1dHRlciBNYXRoXG4vLyAtLS0tLS0tLS0tLVxuLy8gUmV0dXJuIHRoZSBtYXRoIHRvIHVzZSBmb3IgZ3V0dGVyIGNhbGN1bGF0aW9uc1xuLy8gJGNvbnRleHQ6IDxjb250ZXh0PlxuQGZ1bmN0aW9uIGd1dHRlci1tYXRoKFxuICAkY29udGV4dDogJHN1c3lcbikge1xuICAkX3JldHVybiAgOiBzdXN5LWdldChtYXRoLCAkY29udGV4dCk7XG4gICRfcmV0dXJuICA6IGlmKHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJGNvbnRleHQpID09IGluc2lkZS1zdGF0aWMsIHN0YXRpYywgJF9yZXR1cm4pO1xuXG4gIEByZXR1cm4gJF9yZXR1cm47XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjazovLy9+L3N1c3kvc2Fzcy9zdXN5L2xhbmd1YWdlL3N1c3kvX2d1dHRlcnMuc2NzcyIsIkBpbXBvcnQgXCIuLi9iYXNlL2NvbG9yc1wiO1xuQGltcG9ydCBcIn5oNXAtc2RrL3NyYy9zdHlsZXMvYmFzZS9jb2xvcnNcIjtcbkBpbXBvcnQgXCJ+aDVwLXNkay9zcmMvc3R5bGVzL2Jhc2UvdmFyaWFibGVzXCI7XG5cbiR0ZXh0LWxpc3QtdGl0bGU6IDEuMDQyZW07XG5cbi5oNXAtaHViIHtcbiAgdWwuY29udGVudC10eXBlLWxpc3Qge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgcGFkZGluZzogMS4yNWVtIDA7XG4gICAgbWFyZ2luOiAwO1xuICAgIGhlaWdodDogNTAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG5cbiAgICAmW2FyaWEtaGlkZGVuPVwidHJ1ZVwiXSB7XG4gICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cblxuICAgIGxpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgcGFkZGluZzogJGd1dHRlcjtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICY6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGVuKCRhYzEsIDU1JSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2Y1ZjVmNTtcbiAgICB9XG5cbiAgICBpbWcge1xuICAgICAgbWF4LXdpZHRoOiAxMDBweDtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAkZ3V0dGVyO1xuICAgIH1cblxuICAgIGg0IHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAyZW07XG4gICAgICBtYXJnaW46IDA7XG4gICAgfVxuXG4gICAgLmRlc2NyaXB0aW9uIHtcbiAgICAgIGNvbG9yOiAkYzY7XG4gICAgfVxuXG4gICAgLmJ1dHRvbiB7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICBtYXJnaW4tbGVmdDogJGd1dHRlcjtcbiAgICAgIG1hcmdpbi10b3A6IDAuN2VtO1xuICAgIH1cbiAgfVxufVxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrOi8vL3NyYy9zdHlsZXMvY29tcG9uZW50cy9fY29udGVudC10eXBlLWxpc3Quc2NzcyJdLCJzb3VyY2VSb290IjoiIn0=*/
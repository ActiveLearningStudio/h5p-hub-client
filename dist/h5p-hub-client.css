@import url(https://fonts.googleapis.com/css?family=Open+Sans);@charset "UTF-8";
.button {
  font-size: 0.833em;
  font-weight: 600;
  text-decoration: none;
  padding: 0.708em 1.375em;
  border-radius: 1.375em;
  background-color: #f3f3f3;
  color: #1f2227;
  display: inline-block;
  cursor: pointer;
  border: transparent;
  transition: background-color .35s ease;
}

.button:focus {
  outline: 0;
  box-shadow: 0.06em 0 0.6em 0.1em #7bc1f9;
}

.button.button-primary {
  background-color: #0a78d1;
  color: white;
}

.button.button-primary:hover {
  background-color: #1a93f4;
}

.button.button-primary:active {
  background-color: #085ca0;
}

.button.button-primary[disabled] {
  background-color: #acd8fb;
}

.button.button-inverse-primary {
  background-color: white;
  color: #0a78d1;
  border: 0.125em solid #0a78d1;
}

.button.button-inverse-primary:hover {
  color: #1a93f4;
  border-color: #1a93f4;
}

.button.button-inverse-primary:active {
  color: #085ca0;
  border-color: #085ca0;
}

.button.button-inverse-primary[disabled] {
  color: #acd8fb;
  border-color: #acd8fb;
}

.input-group {
  display: flex;
  border: 1px solid gray;
  overflow: hidden;
  border-radius: 50px;
  -webkit-box-shadow: inset 0 0 3px, 0 #697585;
  -moz-box-shadow: inset 0 0 3px, 0 #697585;
  box-shadow: inset 0 0 3px, 0, #697585;
}

input {
  padding: 0.833em;
  font-size: 1em;
  width: 100%;
  border: none;
  background-color: transparent;
  font-style: italic;
  font-color: #697585;
}

input:focus {
  outline: none;
}

.input-button {
  min-width: 80px;
  text-align: center;
  cursor: pointer;
}

.panel {
  border: 0.042em solid #ced6e3;
}

.panel .panel-header {
  background-color: #f3f3f3;
  color: #1f2227;
  padding: 0.833em;
}

.panel .panel-header[aria-expanded] {
  cursor: pointer;
}

.panel .panel-body {
  overflow: hidden;
}

.panel .panel-body[aria-hidden="true"] {
  display: none;
}

.panel .panel-body .panel-body-inner {
  border-top: 0.042em solid #ced6e3;
  padding: 0.833em;
}

.panel-group .panel:not(:first-child) {
  margin-top: -1px;
}

.tab-panel {
  border: 0.042em solid #ced6e3;
}

.tab-panel [role="tablist"] {
  background-color: #f3f3f3;
  list-style: none;
  padding: 0;
  margin: 0;
  border-bottom: 0.042em solid #ced6e3;
}

.tab-panel [role="tab"] {
  display: inline-block;
  padding: 0.833em;
  text-decoration: none;
  color: #1f2227;
  cursor: pointer;
}

.tab-panel [role="tab"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #0a78d1;
  -moz-box-shadow: inset 0 -5px 0, 0 #0a78d1;
  box-shadow: inset 0 -5px 0, 0, #0a78d1;
}

.tab-panel [role="tabpanel"] .tab-panel-inner {
  padding: 0.833em;
}

.tab-panel [role="tabpanel"][aria-hidden="true"] {
  display: none;
}

.h5p-menu {
  border: 0.042em solid #ced6e3;
  background-color: #f3f3f3;
  list-style: none;
  color: #1f2227;
  padding: 0;
  margin: 0;
}

.h5p-menu [role="menuitem"] {
  display: inline-block;
  padding: 0.833em;
  text-decoration: none;
  cursor: pointer;
}

.h5p-menu [role="menuitem"][aria-selected="true"] {
  box-shadow: inset 0 -5px #0a78d1;
}

.message {
  margin: 0.833em 0;
  padding: 1.250em;
  text-align: right;
}

.message h3 {
  font-size: 1.042em;
  color: #1f2227;
}

.message p {
  font-size: 0.833em;
  color: #71757e;
}

.message .close {
  display: none;
}

.info {
  -webkit-box-shadow: 0.167em 0 0 0, #00aa54, true;
  -moz-box-shadow: 0.167em 0 0 0, #00aa54, true;
  box-shadow: 0.167em 0 0 0, #00aa54, true;
  background: rgba(0, 170, 84, 0.15);
  box-shadow: inset 0.167em 0 #00aa54;
}

.info .button {
  color: #00aa54;
  border: solid 1px;
  background-color: transparent;
}

.success {
  -webkit-box-shadow: 0.167em 0 0 0, #ffcc33, true;
  -moz-box-shadow: 0.167em 0 0 0, #ffcc33, true;
  box-shadow: 0.167em 0 0 0, #ffcc33, true;
  background: rgba(255, 204, 51, 0.15);
  box-shadow: inset 0.167em 0 #ffcc33;
}

.success .button {
  color: #1f2227;
  border: solid 1px;
  background-color: transparent;
}

.error {
  -webkit-box-shadow: 0.167em 0 0 0, #c64750, true;
  -moz-box-shadow: 0.167em 0 0 0, #c64750, true;
  box-shadow: 0.167em 0 0 0, #c64750, true;
  background: rgba(198, 71, 80, 0.15);
  box-shadow: inset 0.167em 0 #c64750;
}

.error .button {
  color: #c64750;
  border: solid 1px;
  background-color: transparent;
}

.dismissible {
  overflow: auto;
}

.dismissible .message-content {
  float: right;
}

.dismissible .close {
  display: block;
  float: right;
  padding-top: 1.250em;
  padding-left: 1.250em;
}

.h5p-hub {
  font-family: 'Open Sans', sans-serif;
}

.h5p-hub.panel {
  border: 1px solid #697585;
}

.h5p-hub.panel > .panel-header {
  background-color: white;
  color: #697585;
  font-style: italic;
  font-weight: 600;
}

.h5p-hub.panel > .panel-header:before {
  font-style: normal;
  margin-right: 1em;
}

.h5p-hub.panel > .panel-header:after {
  font-family: 'h5p' !important;
  content: "\E924";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 1.3em;
  float: right;
}

.h5p-hub .tab-panel {
  border: none;
}

.h5p-hub .tab-panel [aria-hidden='true'] {
  display: none;
}

.h5p-hub .tab-panel > nav > ul {
  background-color: #474f5a;
  border-bottom: none;
}

.h5p-hub .tab-panel > nav > ul li {
  color: #f3f3f3;
}

.h5p-hub.h5p-section-create-content {
  border: 1px solid #0a78d1;
}

.h5p-hub [aria-hidden="true"] {
  display: none;
}

.h5p-hub .content-type-detail {
  padding: 0.833em;
}

.h5p-hub .content-type-detail .container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.h5p-hub .content-type-detail .container:after {
  content: " ";
  display: block;
  clear: both;
}

.h5p-hub .content-type-detail .image-wrapper {
  width: 32.20339%;
  float: left;
  margin-right: 1.69492%;
}

.h5p-hub .content-type-detail .text-details {
  width: 66.10169%;
  float: right;
  margin-right: 0;
}

.h5p-hub .content-type-detail .button-bar {
  overflow: auto;
  margin-bottom: 0.833em;
}

.h5p-hub .content-type-detail .button-bar .button {
  float: right;
}

.h5p-hub .content-type-detail .back-button {
  font-size: 2em;
  color: #1f2227;
}

.h5p-hub .content-type-detail .back-button:hover {
  color: #4c5460;
}

.h5p-hub ul.content-type-list {
  list-style: none;
  padding: 1.25em 0;
  margin: 0;
  height: 500px;
  overflow: auto;
}

.h5p-hub ul.content-type-list[aria-hidden="true"] {
  display: none;
}

.h5p-hub ul.content-type-list li {
  width: 100%;
  border-bottom: 1px solid #f5f5f5;
  padding: 0.833em;
  box-sizing: border-box;
  cursor: pointer;
}

.h5p-hub ul.content-type-list li:hover {
  background-color: #f5faff;
}

.h5p-hub ul.content-type-list img {
  max-width: 100px;
  float: left;
  margin-right: 0.833em;
}

.h5p-hub ul.content-type-list .content-type-list-title {
  font-size: 1.042em;
  line-height: 2em;
  font-weight: 600;
}

.h5p-hub ul.content-type-list .content-type-list-description {
  color: #747474;
  font-weight: 400;
  font-size: 0.833em;
}

.h5p-hub ul.content-type-list .button {
  float: right;
  margin-left: 0.833em;
  margin-top: 0.7em;
}

.menu-group {
  background-color: #697585;
  padding-top: 1.125em;
  padding-bottom: 1.125em;
}

.menu {
  overflow: auto;
  border: 0;
  border-bottom: solid 1px #9CA5B4;
  margin-left: 2.25em;
  margin-right: 2.25em;
}

.menu nav {
  float: right;
}

.menu ul {
  background-color: transparent;
  border: none;
}

.menu ul li {
  color: #f3f3f3;
}

.menu .menu-title {
  float: left;
  text-align: center;
  color: white;
  font-style: italic;
}

.input-group-wrapper {
  margin-left: 2.25em;
  margin-right: 2.25em;
  margin-top: 1.25em;
  padding: 0.333em;
  background-color: white;
  border-radius: 50px;
}

.input-group {
  background-color: white;
}

.input-button {
  font-size: 2.5em;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/
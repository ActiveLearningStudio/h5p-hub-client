@import url(https://fonts.googleapis.com/css?family=Open+Sans);@charset "UTF-8";
/*html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}
*/
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.h5p {
  font-family: 'Open Sans', sans-serif;
  font-size: 0.917em;
  color: #1f2227;
}

.h5p h1, .h5p h2, .h5p h3, .h5p h4, .h5p h5, .h5p h6 {
  font-family: inherit;
  color: inherit;
  font-weight: 300;
  line-height: 1.1;
}

.h5p h1, .h5p h2, .h5p h3 {
  margin-top: 0.833em;
  margin-bottom: 0.4165em;
}

.h5p h4, .h5p h5, .h5p h6 {
  margin-top: 0.4165em;
  margin-bottom: 0.4165em;
  font-weight: 600;
}

.h5p h1 {
  font-size: 1.733em;
}

.h5p h2 {
  font-size: 1.458em;
}

.h5p h3 {
  font-size: 1.250em;
}

.h5p h4 {
  font-size: 1.042em;
}

.h5p h5 {
  font-size: 0.938em;
}

.h5p h6 {
  font-size: 0.875em;
}

.h5p small, .h5p .small {
  color: #71757e;
  font-size: 0.833em;
}

.h5p a {
  color: #1f2227;
  font-weight: 400;
}

.h5p .additional-information {
  font-style: italic;
  color: #71757e;
}

.h5p .button {
  font-size: 0.833em;
  font-weight: 600;
  text-decoration: none;
  padding: 0.708em 1.375em;
  border-radius: 1.375em;
  background-color: #f3f3f3;
  color: #1f2227;
  display: inline-block;
  cursor: pointer;
  border: transparent;
  transition: background-color .35s ease;
}

.h5p .button:focus {
  outline: 0;
  box-shadow: 0.06em 0 0.6em 0.1em #7bc1f9;
}

.h5p .button.button-primary {
  background-color: #0a78d1;
  color: white;
}

.h5p .button.button-primary:hover {
  background-color: #1a93f4;
}

.h5p .button.button-primary:active {
  background-color: #085ca0;
}

.h5p .button.button-primary[disabled] {
  background-color: #acd8fb;
}

.h5p .button.button-inverse-primary {
  background-color: white;
  color: #0a78d1;
  border: 0.125em solid #0a78d1;
}

.h5p .button.button-inverse-primary:hover {
  color: #1a93f4;
  border-color: #1a93f4;
}

.h5p .button.button-inverse-primary:active {
  color: #085ca0;
  border-color: #085ca0;
}

.h5p .button.button-inverse-primary[disabled] {
  color: #acd8fb;
  border-color: #acd8fb;
}

.h5p .img-responsive {
  max-width: 100%;
}

.h5p {
  /* Form control */
  /* Input Group */
}

.h5p .form-control {
  display: block;
  width: 100%;
  padding: 0.833em;
  font-size: 0.917em;
  border: 0.125em solid #ced6e3;
  box-sizing: border-box;
  font-weight: 600;
}

.h5p .form-control::-webkit-input-placeholder {
  color: #ced6e3;
  font-style: italic;
}

.h5p .form-control:-moz-placeholder {
  color: #ced6e3;
  font-style: italic;
}

.h5p .form-control::-moz-placeholder {
  color: #ced6e3;
  font-style: italic;
}

.h5p .form-control:-ms-input-placeholder {
  color: #ced6e3;
  font-style: italic;
}

.h5p .form-control.form-control-rounded {
  border-radius: 2em;
}

.h5p .form-control:focus {
  border-color: #7bc1f9;
  box-shadow: inset 0px 0px 0.8em -0.125em rgba(0, 0, 0, 0.4);
  outline: none;
}

.h5p .input-group {
  position: relative;
}

.h5p .input-group .input-group-addon {
  position: absolute;
  top: 0.5em;
  right: 1em;
}

.h5p .panel {
  border: 0.042em solid #ced6e3;
}

.h5p .panel .panel-header {
  background-color: #f3f3f3;
  color: #1f2227;
  padding: 0.833em;
}

.h5p .panel .panel-header[aria-expanded] {
  cursor: pointer;
}

.h5p .panel .panel-body {
  overflow: hidden;
}

.h5p .panel .panel-body[aria-hidden="true"] {
  display: none;
}

.h5p .panel .panel-body .panel-body-inner {
  border-top: 0.042em solid #ced6e3;
  padding: 0.833em;
}

.h5p .panel-group .panel:not(:first-child) {
  margin-top: -1px;
}

.h5p .tab-panel {
  border: 0.042em solid #ced6e3;
}

.h5p .tab-panel [role="tablist"] {
  background-color: #f3f3f3;
  list-style: none;
  padding: 0;
  margin: 0;
  border-bottom: 0.042em solid #ced6e3;
}

.h5p .tab-panel [role="tab"] {
  display: inline-block;
  padding: 0.833em;
  text-decoration: none;
  color: #1f2227;
  cursor: pointer;
}

.h5p .tab-panel [role="tab"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #0a78d1;
  -moz-box-shadow: inset 0 -5px 0 0 #0a78d1;
  box-shadow: inset 0 -5px 0 0 #0a78d1;
}

.h5p .tab-panel [role="tabpanel"] .tab-panel-inner {
  padding: 0.833em;
}

.h5p .tab-panel [role="tabpanel"][aria-hidden="true"] {
  opacity: 0;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.h5p .tab-panel [role="tabpanel"][aria-hidden="false"] {
  visibility: visible;
  opacity: 1;
  height: auto;
  transition: visibility 0s, opacity 1s linear;
}

.h5p .h5p-menu {
  border: 0.042em solid #ced6e3;
  background-color: #f3f3f3;
  list-style: none;
  color: #1f2227;
  padding: 0;
  margin: 0 0 0.833em 0;
}

.h5p .h5p-menu [role="menuitem"] {
  display: inline-block;
  padding: 0.833em;
  text-decoration: none;
  cursor: pointer;
}

.h5p .h5p-menu [role="menuitem"][aria-selected="true"] {
  box-shadow: inset 0 -5px #0a78d1;
}

.message {
  margin: 0.833em 0;
  padding: 1.250em;
  text-align: right;
}

.message h3 {
  font-size: 1.042em;
  color: #1f2227;
}

.message p {
  font-size: 0.833em;
  color: #71757e;
}

.message .close {
  display: none;
}

.info {
  -webkit-box-shadow: 0.167em 0 0 0 #00aa54 true;
  -moz-box-shadow: 0.167em 0 0 0 #00aa54 true;
  box-shadow: 0.167em 0 0 0 #00aa54 true;
  background: rgba(0, 170, 84, 0.15);
  box-shadow: inset 0.167em 0 #00aa54;
}

.info .button {
  color: #00aa54;
  border: solid 1px;
  background-color: transparent;
}

.success {
  -webkit-box-shadow: 0.167em 0 0 0 #ffcc33 true;
  -moz-box-shadow: 0.167em 0 0 0 #ffcc33 true;
  box-shadow: 0.167em 0 0 0 #ffcc33 true;
  background: rgba(255, 204, 51, 0.15);
  box-shadow: inset 0.167em 0 #ffcc33;
}

.success .button {
  color: #1f2227;
  border: solid 1px;
  background-color: transparent;
}

.error {
  -webkit-box-shadow: 0.167em 0 0 0 #c64750 true;
  -moz-box-shadow: 0.167em 0 0 0 #c64750 true;
  box-shadow: 0.167em 0 0 0 #c64750 true;
  background: rgba(198, 71, 80, 0.15);
  box-shadow: inset 0.167em 0 #c64750;
}

.error .button {
  color: #c64750;
  border: solid 1px;
  background-color: transparent;
}

.dismissible {
  overflow: auto;
}

.dismissible .message-content {
  float: right;
}

.dismissible .close {
  display: block;
  float: right;
  padding-top: 1.250em;
  padding-left: 1.250em;
}

/* Section colors */
/* Section colors */
.h5p.h5p-hub {
  font-family: 'Open Sans', sans-serif;
}

.h5p.h5p-hub .panel {
  border: 1px solid #697585;
}

.h5p.h5p-hub .panel > .panel-header {
  background-color: white;
  color: #697585;
  font-style: italic;
  font-weight: 600;
}

.h5p.h5p-hub .panel > .panel-header:before {
  font-style: normal;
  margin-right: 1em;
}

.h5p.h5p-hub .panel > .panel-header:after {
  font-family: 'h5p' !important;
  content: "\E924";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 1.3em;
  float: right;
}

.h5p.h5p-hub .panel.h5p-section-content-types[open] {
  border: 1px solid #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-content-types [role="menuitem"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #0a78d1;
  -moz-box-shadow: inset 0 -5px 0 0 #0a78d1;
  box-shadow: inset 0 -5px 0 0 #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-content-types [role="tab"][aria-selected="true"] ~ span {
  background: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-content-types .button.button-primary {
  background-color: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-content-types .button.button-inverse-primary {
  border-color: #0a78d1;
  color: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-content-types .icon-search {
  color: #0a78d1;
}

.h5p.h5p-hub .panel.h5p-section-content[open] {
  border: 1px solid #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-content [role="menuitem"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #db6f28;
  -moz-box-shadow: inset 0 -5px 0 0 #db6f28;
  box-shadow: inset 0 -5px 0 0 #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-content [role="tab"][aria-selected="true"] ~ span {
  background: #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-content .button.button-primary {
  background-color: #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-content .button.button-inverse-primary {
  border-color: #db6f28;
  color: #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-content .icon-search {
  color: #db6f28;
}

.h5p.h5p-hub .panel.h5p-section-upload[open] {
  border: 1px solid #ced6e3;
}

.h5p.h5p-hub .panel.h5p-section-upload [role="menuitem"][aria-selected="true"] {
  -webkit-box-shadow: inset 0 -5px 0, 0 #ced6e3;
  -moz-box-shadow: inset 0 -5px 0 0 #ced6e3;
  box-shadow: inset 0 -5px 0 0 #ced6e3;
}

.h5p.h5p-hub .panel.h5p-section-upload [role="tab"][aria-selected="true"] ~ span {
  background: #ced6e3;
}

.h5p.h5p-hub .panel.h5p-section-upload .button.button-primary {
  background-color: #ced6e3;
}

.h5p.h5p-hub .panel.h5p-section-upload .button.button-inverse-primary {
  border-color: #ced6e3;
  color: #ced6e3;
}

.h5p.h5p-hub .panel.h5p-section-upload .icon-search {
  color: #ced6e3;
}

.h5p.h5p-hub .tab-panel {
  border: none;
}

.h5p.h5p-hub .tab-panel > nav > ul {
  background-color: #474f5a;
  border-bottom: none;
}

.h5p.h5p-hub .tab-panel > nav > ul [role="tab"] {
  color: #f3f3f3;
}

.h5p.h5p-hub .tab-panel > nav > ul [role="tab"][aria-selected='true']:before {
  font-family: 'h5p' !important;
  content: "\E91B";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 1.6em;
  margin-top: -1.5px;
  float: left;
}

.h5p.h5p-hub .tab-panel > nav > ul [role="tab"][aria-selected='false']:before {
  font-family: 'h5p' !important;
  content: "\E91D";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  font-size: 1.6em;
  margin-top: -1.5px;
  float: left;
}

.h5p.h5p-hub .tab-panel > nav > ul [role="tab"]:nth-child(1) ~ span,
.h5p.h5p-hub .tab-panel > nav > ul [role="tab"]:nth-child(1)[aria-selected="true"] ~ span {
  width: 150px;
  right: 0;
}

.h5p.h5p-hub .tab-panel > nav > ul [role="tab"]:nth-child(2) ~ span,
.h5p.h5p-hub .tab-panel > nav > ul [role="tab"]:nth-child(2)[aria-selected="true"] ~ span {
  width: 120px;
  right: -150px;
}

/* Section colors */
.h5p-hub .menu-group {
  background-color: #697585;
  padding: 1.125em;
}

.h5p-hub .menu-group .menu {
  overflow: auto;
  border: 0;
  border-bottom: solid 1px #9CA5B4;
  margin-left: 2.25em;
  margin-right: 2.25em;
}

.h5p-hub .menu-group .menu nav {
  float: right;
}

.h5p-hub .menu-group .menu ul {
  background-color: transparent;
  border: none;
}

.h5p-hub .menu-group .menu ul li {
  color: #f3f3f3;
}

.h5p-hub .menu-group .menu .menu-title {
  float: left;
  text-align: center;
  color: white;
  font-style: italic;
}

.h5p-hub .menu-group .input-group {
  padding: 0.4em;
  margin-top: 1.125em;
  background-color: white;
  border-radius: 2em;
}

.h5p-hub .menu-group .input-group input {
  padding-left: 1.5em;
  font-style: italic;
}

.h5p-hub .menu-group .icon-search {
  font-size: 2.5em;
  top: 0.2em;
  right: 0.25em;
}

.h5p-hub .content-type-section {
  position: relative;
}

.h5p-hub [aria-hidden="true"] {
  opacity: 0;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}

.h5p-hub .content-type-detail {
  padding: 0.833em;
  display: inherit;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 0;
  height: auto;
  visibility: hidden;
  transform: translateX(100%);
  transition: opacity 0.2s ease-out, transform 0.2s ease-out, visibility 0s linear 0.2s;
}

.h5p-hub .content-type-detail[aria-hidden="false"] {
  opacity: 1;
  transform: translateX(0);
  visibility: visible;
  transition: opacity 0.2s ease-out, transform 0.2s ease-out, visibility 0s linear 0s;
}

.h5p-hub .content-type-detail .container {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.h5p-hub .content-type-detail .container:after {
  content: " ";
  display: block;
  clear: both;
}

.h5p-hub .content-type-detail .image-wrapper {
  width: 32.20339%;
  float: left;
  margin-right: 1.69492%;
}

.h5p-hub .content-type-detail .text-details {
  width: 66.10169%;
  float: right;
  margin-right: 0;
}

.h5p-hub .content-type-detail .button-bar {
  overflow: auto;
  margin-bottom: 0.833em;
}

.h5p-hub .content-type-detail .button-bar .button {
  float: right;
}

.h5p-hub .content-type-detail .back-button {
  font-size: 2em;
  color: #1f2227;
}

.h5p-hub .content-type-detail .back-button:hover {
  color: #4c5460;
}

.h5p-hub .content-type-detail .back-button.icon-arrow-thick:before {
  cursor: pointer;
}

/* Section colors */
.h5p-hub ul.content-type-list {
  list-style: none;
  padding: 1.25em 0;
  margin: 0;
  height: 40em;
  overflow: auto;
  box-shadow: 0 0.4em 0.4em -0.2em rgba(79, 87, 99, 0.2) inset, 0 -0.4em 0.4em -0.2em rgba(79, 87, 99, 0.2) inset;
  opacity: 1;
  transition: opacity 0.2s, visibility 0s linear 0s;
}

.h5p-hub ul.content-type-list[aria-hidden="true"] {
  display: inherit;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s, visibility 0s linear 0.2s;
}

.h5p-hub ul.content-type-list::-webkit-scrollbar {
  background-color: #f3f3f3;
}

.h5p-hub ul.content-type-list::-webkit-scrollbar-thumb {
  background: #697585 url("/src/images/scrollbar-bars-icon.svg") no-repeat center;
  background-size: 24px 100%;
}

.h5p-hub ul.content-type-list::-webkit-scrollbar-button:vertical {
  background-color: #697585;
  background-size: 20px 20px;
  background-position-x: -4px;
  background-position-y: -3px;
}

.h5p-hub ul.content-type-list::-webkit-scrollbar-button:vertical:decrement {
  background-image: url("/src/images/arrow-line-up.svg");
}

.h5p-hub ul.content-type-list::-webkit-scrollbar-button:vertical:increment {
  background-image: url("/src/images/arrow-line-down.svg");
}

.h5p-hub ul.content-type-list li {
  width: 100%;
  padding: 0.833em;
  box-sizing: border-box;
  cursor: pointer;
}

.h5p-hub ul.content-type-list li:hover {
  background-color: #f5faff;
}

.h5p-hub ul.content-type-list li:not(:last-child) {
  border-bottom: 1px solid #f5f5f5;
}

.h5p-hub ul.content-type-list img {
  max-width: 100px;
  float: left;
  margin-right: 0.833em;
}

.h5p-hub ul.content-type-list h4 {
  line-height: 2em;
  margin: 0;
}

.h5p-hub ul.content-type-list .description {
  color: #747474;
}

.h5p-hub ul.content-type-list .button {
  float: right;
  margin-left: 0.833em;
  margin-top: 0.7em;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/